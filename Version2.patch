Subject: [PATCH] Version2
---
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.gitignore	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,15 @@
+*.iml
+.gradle
+/local.properties
+/.idea/caches
+/.idea/libraries
+/.idea/modules.xml
+/.idea/workspace.xml
+/.idea/navEditor.xml
+/.idea/assetWizardSettings.xml
+.DS_Store
+/build
+/captures
+.externalNativeBuild
+.cxx
+local.properties
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/.gitignore	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/AndroidProjectSystem.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/AndroidProjectSystem.xml b/.idea/AndroidProjectSystem.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/AndroidProjectSystem.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AndroidProjectSystem">
+    <option name="providerId" value="com.android.tools.idea.GradleProjectSystem" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/appInsightsSettings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/appInsightsSettings.xml b/.idea/appInsightsSettings.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/appInsightsSettings.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AppInsightsSettings">
+    <option name="tabSettings">
+      <map>
+        <entry key="Firebase Crashlytics">
+          <value>
+            <InsightsFilterSettings>
+              <option name="connection">
+                <ConnectionSetting>
+                  <option name="appId" value="PLACEHOLDER" />
+                  <option name="mobileSdkAppId" value="" />
+                  <option name="projectId" value="" />
+                  <option name="projectNumber" value="" />
+                </ConnectionSetting>
+              </option>
+              <option name="signal" value="SIGNAL_UNSPECIFIED" />
+              <option name="timeIntervalDays" value="THIRTY_DAYS" />
+              <option name="visibilityType" value="ALL" />
+            </InsightsFilterSettings>
+          </value>
+        </entry>
+      </map>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/compiler.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <bytecodeTargetLevel target="21" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/deploymentTargetSelector.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="deploymentTargetSelector">
+    <selectionStates>
+      <SelectionState runConfigName="app">
+        <option name="selectionMode" value="DROPDOWN" />
+      </SelectionState>
+    </selectionStates>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/gradle.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <option name="testRunner" value="CHOOSE_PER_TEST" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="gradleJvm" value="#GRADLE_LOCAL_JAVA_HOME" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+            <option value="$PROJECT_DIR$/app" />
+          </set>
+        </option>
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/migrations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/migrations.xml b/.idea/migrations.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/migrations.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectMigrations">
+    <option name="MigrateToGradleLocalJavaHome">
+      <set>
+        <option value="$PROJECT_DIR$" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/misc.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="jbr-21" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/runConfigurations.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="com.intellij.execution.junit.AbstractAllInDirectoryConfigurationProducer" />
+        <option value="com.intellij.execution.junit.AllInPackageConfigurationProducer" />
+        <option value="com.intellij.execution.junit.PatternConfigurationProducer" />
+        <option value="com.intellij.execution.junit.TestInClassConfigurationProducer" />
+        <option value="com.intellij.execution.junit.UniqueIdConfigurationProducer" />
+        <option value="com.intellij.execution.junit.testDiscovery.JUnitTestDiscoveryConfigurationProducer" />
+        <option value="org.jetbrains.kotlin.idea.junit.KotlinJUnitRunConfigurationProducer" />
+        <option value="org.jetbrains.kotlin.idea.junit.KotlinPatternConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/.idea/vcs.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/.gitignore b/app/.gitignore
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/.gitignore	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,1 @@
+/build
\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/build.gradle.kts	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,117 @@
+plugins {
+    alias(libs.plugins.android.application)
+    alias(libs.plugins.kotlin.android)
+    alias(libs.plugins.kotlin.compose)
+    id("kotlin-parcelize")
+}
+
+android {
+    namespace = "mx.edu.utng.securidad"
+    compileSdk = 36
+
+    defaultConfig {
+        applicationId = "mx.edu.utng.securidad"
+        minSdk = 24
+        targetSdk = 36
+        versionCode = 1
+        versionName = "1.0"
+
+        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
+
+        vectorDrawables {
+            useSupportLibrary = true
+        }
+    }
+
+    buildTypes {
+        release {
+            isMinifyEnabled = false
+            proguardFiles(
+                getDefaultProguardFile("proguard-android-optimize.txt"),
+                "proguard-rules.pro"
+            )
+        }
+    }
+
+    compileOptions {
+        sourceCompatibility = JavaVersion.VERSION_11
+        targetCompatibility = JavaVersion.VERSION_11
+    }
+
+    kotlinOptions {
+        jvmTarget = "11"
+    }
+
+    buildFeatures {
+        compose = true // ¡ACTIVAMOS COMPOSE!
+    }
+
+    composeOptions {
+        kotlinCompilerExtensionVersion = "1.5.8"
+    }
+
+    packaging {
+        resources {
+            excludes += "/META-INF/{AL2.0,LGPL2.1}"
+        }
+    }
+}
+
+dependencies {
+    // AndroidX Core
+    implementation("androidx.core:core-ktx:1.12.0")
+    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.7.0")
+
+    // Jetpack Compose BOM (Bill of Materials)
+    // El BOM gestiona las versiones de todas las librerías de Compose
+    val composeBom = platform("androidx.compose:compose-bom:2024.02.00")
+    implementation(composeBom)
+    androidTestImplementation(composeBom)
+
+    // Compose UI
+    implementation("androidx.compose.ui:ui")
+    implementation("androidx.compose.ui:ui-graphics")
+    implementation("androidx.compose.ui:ui-tooling-preview")
+    debugImplementation("androidx.compose.ui:ui-tooling")
+    debugImplementation("androidx.compose.ui:ui-test-manifest")
+
+    // Material Design 3 para Compose
+    implementation("androidx.compose.material3:material3")
+    implementation("androidx.compose.material:material-icons-extended")
+
+    // Activity Compose
+    implementation("androidx.activity:activity-compose:1.8.2")
+
+    // Navigation Compose
+    implementation("androidx.navigation:navigation-compose:2.7.7")
+
+    // ViewModel Compose
+    implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.7.0")
+    implementation("androidx.lifecycle:lifecycle-runtime-compose:2.7.0")
+
+    // Seguridad - EncryptedSharedPreferences
+    implementation("androidx.security:security-crypto:1.1.0-alpha06")
+
+    // Networking - Retrofit
+    implementation("com.squareup.retrofit2:retrofit:2.9.0")
+    implementation("com.squareup.retrofit2:converter-gson:2.9.0")
+    implementation("com.squareup.okhttp3:logging-interceptor:4.12.0")
+
+    // Coroutines
+    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")
+    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
+
+    // DataStore
+    implementation("androidx.datastore:datastore-preferences:1.0.0")
+
+    // Accompanist (utilidades para Compose)
+    implementation("com.google.accompanist:accompanist-systemuicontroller:0.32.0")
+
+    // Testing
+    testImplementation("junit:junit:4.13.2")
+    androidTestImplementation("androidx.test.ext:junit:1.1.5")
+    androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
+    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
+
+    implementation(libs.androidx.core.splashscreen)
+}
\ No newline at end of file
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/proguard-rules.pro	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,21 @@
+# Add project specific ProGuard rules here.
+# You can control the set of applied configuration files using the
+# proguardFiles setting in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
\ No newline at end of file
Index: app/src/androidTest/java/mx/edu/utng/arg/security01/ExampleInstrumentedTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/androidTest/java/mx/edu/utng/arg/security01/ExampleInstrumentedTest.kt b/app/src/androidTest/java/mx/edu/utng/arg/security01/ExampleInstrumentedTest.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/androidTest/java/mx/edu/utng/arg/security01/ExampleInstrumentedTest.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,24 @@
+package mx.edu.utng.arg.security01
+
+import androidx.test.platform.app.InstrumentationRegistry
+import androidx.test.ext.junit.runners.AndroidJUnit4
+
+import org.junit.Test
+import org.junit.runner.RunWith
+
+import org.junit.Assert.*
+
+/**
+ * Instrumented test, which will execute on an Android device.
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+@RunWith(AndroidJUnit4::class)
+class ExampleInstrumentedTest {
+    @Test
+    fun useAppContext() {
+        // Context of the app under test.
+        val appContext = InstrumentationRegistry.getInstrumentation().targetContext
+        assertEquals("mx.edu.utng.arg.security01", appContext.packageName)
+    }
+}
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/AndroidManifest.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,33 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <!-- Permisos necesarios -->
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+
+    <application
+        android:allowBackup="false"
+        android:dataExtractionRules="@xml/data_extraction_rules"
+        android:fullBackupContent="@xml/backup_rules"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/Theme.Security01"
+        android:usesCleartextTraffic="false"
+        tools:targetApi="31">
+
+        <activity
+            android:name="mx.edu.utng.arg.security01.MainActivity"
+            android:exported="true"
+            android:theme="@style/Theme.Security01"
+            android:windowSoftInputMode="adjustResize">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+    </application>
+
+</manifest>
Index: app/src/main/java/mx/edu/utng/arg/security01/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/MainActivity.kt b/app/src/main/java/mx/edu/utng/arg/security01/MainActivity.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/MainActivity.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,77 @@
+package mx.edu.utng.arg.security01
+import android.os.Bundle
+import androidx.activity.ComponentActivity
+import androidx.activity.compose.setContent
+import androidx.activity.viewModels
+import androidx.compose.foundation.layout.fillMaxSize
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.Surface
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Modifier
+import androidx.core.splashscreen.SplashScreen.Companion.installSplashScreen
+import androidx.navigation.compose.rememberNavController
+import mx.edu.utng.arg.security01.navigation.NavigationGraph
+import mx.edu.utng.arg.security01.navigation.Screen
+import mx.edu.utng.arg.security01.ui.theme.Security01Theme
+import mx.edu.utng.arg.security01.viewmodel.AuthViewModel
+
+/**
+ * Activity Principal de la aplicación
+ *
+ * Explicación:
+ * En Compose, la Activity es MUCHO más simple que en Views tradicionales.
+ * Solo hace dos cosas principales:
+ * 1. Configura el tema
+ * 2. Inicia el grafo de navegación
+ *
+ * Todo lo demás (UI, lógica) está en Composables separados.
+ * Esto hace el código más limpio y modular.
+ */
+class MainActivity : ComponentActivity() {
+
+    // ViewModel compartido en toda la app
+    private val authViewModel: AuthViewModel by viewModels()
+
+    override fun onCreate(savedInstanceState: Bundle?) {
+        // Instalamos el splash screen del sistema
+        installSplashScreen()
+
+        super.onCreate(savedInstanceState)
+
+        /**
+         * setContent {} es donde "arranca" Compose
+         *
+         * IMPORTANTE: Todo lo que esté dentro de setContent
+         * será UI declarativa con Compose.
+         */
+        setContent {
+            Security01Theme {
+                // Surface es el contenedor base
+                Surface(
+                    modifier = Modifier.fillMaxSize(),
+                    color = MaterialTheme.colorScheme.background
+                ) {
+                    SecurityApp()
+                }
+            }
+        }
+    }
+}
+
+/**
+ * Composable principal de la aplicación
+ *
+ * ESTRUCTURA:
+ * MainActivity -> SecurityApp -> NavigationGraph -> Screens
+ *
+ * Es como una pirámide: la base (MainActivity) sostiene todo lo demás.
+ */
+@Composable
+fun SecurityApp() {
+    val navController = rememberNavController()
+
+    NavigationGraph(
+        navController = navController,
+        startDestination = Screen.Splash.route
+    )
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/models/AuthState.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/models/AuthState.kt b/app/src/main/java/mx/edu/utng/arg/security01/models/AuthState.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/models/AuthState.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,13 @@
+package mx.edu.utng.arg.security01.models
+
+/**
+ * Representa los diferentes estados de autenticación
+ * Esto es un patrón Sealed Class - muy útil para manejar estados
+ */
+sealed class AuthState {
+    object Idle : AuthState() // Estado inicial, sin acción
+    object Loading : AuthState() // Procesando autenticación
+    data class Success(val user: User) : AuthState() // Login exitoso
+    data class Error(val message: String) : AuthState() // Ocurrió un error
+    object Logout : AuthState() // Usuario cerró sesión
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/models/LoginRequest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/models/LoginRequest.kt b/app/src/main/java/mx/edu/utng/arg/security01/models/LoginRequest.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/models/LoginRequest.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,10 @@
+package mx.edu.utng.arg.security01.models
+
+/**
+ * Datos necesarios para hacer login
+ * Esta información se enviará al servidor
+ */
+data class LoginRequest(
+    val email: String,
+    val password: String
+)
Index: app/src/main/java/mx/edu/utng/arg/security01/models/LoginResponse.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/models/LoginResponse.kt b/app/src/main/java/mx/edu/utng/arg/security01/models/LoginResponse.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/models/LoginResponse.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,13 @@
+package mx.edu.utng.arg.security01.models
+
+/**
+ * Respuesta que recibimos del servidor después del login
+ * @property success Indica si el login fue exitoso
+ * @property message Mensaje descriptivo del resultado
+ * @property user Datos del usuario (solo si success = true)
+ */
+data class LoginResponse(
+    val success: Boolean,
+    val message: String,
+    val user: User? = null
+)
Index: app/src/main/java/mx/edu/utng/arg/security01/models/User.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/models/User.kt b/app/src/main/java/mx/edu/utng/arg/security01/models/User.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/models/User.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,19 @@
+package mx.edu.utng.arg.security01.models
+
+import android.os.Parcelable
+import kotlinx.parcelize.Parcelize
+
+/**
+ * Clase que representa a un usuario en el sistema
+ * @property id Identificador único del usuario
+ * @property email Correo electrónico (usado para login)
+ * @property name Nombre completo del usuario
+ * @property token Token JWT para autenticación en API
+ */
+@Parcelize
+data class User(
+    val id: String,
+    val email: String,
+    val name: String,
+    val token: String? = null
+) : Parcelable
Index: app/src/main/java/mx/edu/utng/arg/security01/navigation/NavGraph.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/navigation/NavGraph.kt b/app/src/main/java/mx/edu/utng/arg/security01/navigation/NavGraph.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/navigation/NavGraph.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,92 @@
+package mx.edu.utng.arg.security01.navigation
+
+import androidx.compose.runtime.Composable
+import androidx.navigation.NavHostController
+import androidx.navigation.compose.NavHost
+import androidx.navigation.compose.composable
+import mx.edu.utng.arg.security01.ui.screens.HomeScreen
+import mx.edu.utng.arg.security01.ui.screens.LoginScreen
+
+
+/**
+ * Rutas de navegación de la aplicación
+ *
+ * Explicación:
+ * Las rutas son como las direcciones de diferentes páginas web.
+ * Cada pantalla tiene su propia "dirección" única.
+ *
+ * sealed class es perfecta porque nos asegura que solo existan
+ * las rutas que definimos aquí, nada más.
+ */
+sealed class Screen(val route: String) {
+    object Splash : Screen("splash")
+    object Login : Screen("login")
+    object Home : Screen("home")
+}
+
+/**
+ * Grafo de navegación principal
+ *
+ * ANALOGÍA DEL GRAFO DE NAVEGACIÓN:
+ * Imaginen un mapa de metro. Cada estación es una pantalla,
+ * y las líneas que las conectan son las rutas de navegación.
+ * El NavHost es el sistema completo de metro que gestiona todo.
+ */
+@Composable
+fun NavigationGraph(
+    navController: NavHostController,
+    startDestination: String
+) {
+    NavHost(
+        navController = navController,
+        startDestination = startDestination
+    ) {
+        // ============================================
+        // PANTALLA DE SPLASH
+        // ============================================
+        composable(route = Screen.Splash.route) {
+            mx.edu.utng.arg.security01.ui.screens.SplashScreen (
+                onNavigateToLogin = {
+                    navController.navigate(Screen.Login.route) {
+                        // Eliminamos Splash del stack para que no se pueda volver
+                        popUpTo(Screen.Splash.route) { inclusive = true }
+                    }
+                },
+                onNavigateToHome = {
+                    navController.navigate(Screen.Home.route) {
+                        popUpTo(Screen.Splash.route) { inclusive = true }
+                    }
+                }
+            )
+        }
+
+        // ============================================
+        // PANTALLA DE LOGIN
+        // ============================================
+        composable(route = Screen.Login.route) {
+            LoginScreen(
+                onLoginSuccess = {
+                    navController.navigate(Screen.Home.route) {
+                        // Eliminamos Login del stack
+                        // Esto evita que al presionar "atrás" regrese al login
+                        popUpTo(Screen.Login.route) { inclusive = true }
+                    }
+                }
+            )
+        }
+
+        // ============================================
+        // PANTALLA HOME
+        // ============================================
+        composable(route = Screen.Home.route) {
+            HomeScreen(
+                onLogout = {
+                    navController.navigate(Screen.Login.route) {
+                        // Limpiamos todo el stack de navegación
+                        popUpTo(0) { inclusive = true }
+                    }
+                }
+            )
+        }
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/network/ApiService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/network/ApiService.kt b/app/src/main/java/mx/edu/utng/arg/security01/network/ApiService.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/network/ApiService.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,40 @@
+package mx.edu.utng.arg.security01.network
+
+import mx.edu.utng.arg.security01.models.LoginRequest
+import mx.edu.utng.arg.security01.models.LoginResponse
+import retrofit2.Response
+import retrofit2.http.Body
+import retrofit2.http.GET
+import retrofit2.http.Header
+import retrofit2.http.POST
+
+/**
+ * Interface que define todos los endpoints de nuestra API
+ *
+ * ANALOGÍA: Esto es como un menú de restaurante.
+ * Define qué platos (servicios) puedes pedir y cómo pedirlos.
+ */
+interface ApiService {
+
+    /**
+     * Endpoint de login
+     * @param loginRequest Credenciales del usuario
+     * @return Respuesta con token y datos del usuario
+     */
+    @POST("auth/login")
+    suspend fun login(@Body loginRequest: LoginRequest): Response<LoginResponse>
+
+    /**
+     * Endpoint para validar que el token sigue siendo válido
+     * @param token Token de autenticación en el header
+     */
+    @GET("auth/validate")
+    suspend fun validateToken(@Header("Authorization") token: String): Response<LoginResponse>
+
+    /**
+     * Endpoint de logout (cierre de sesión en el servidor)
+     * @param token Token para identificar la sesión a cerrar
+     */
+    @POST("auth/logout")
+    suspend fun logout(@Header("Authorization") token: String): Response<Unit>
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/network/AuthRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/network/AuthRepository.kt b/app/src/main/java/mx/edu/utng/arg/security01/network/AuthRepository.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/network/AuthRepository.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,84 @@
+package mx.edu.utng.arg.security01.network
+
+import android.content.Context
+import android.util.Log
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.withContext
+import mx.edu.utng.arg.security01.models.LoginRequest
+import mx.edu.utng.arg.security01.models.User
+import mx.edu.utng.arg.security01.security.SecureStorage
+
+class AuthRepository(context: Context) {
+
+    private val secureStorage = SecureStorage(context)
+    // Comentamos la API real temporalmente
+    // private val apiService = RetrofitClient.apiService
+
+    companion object {
+        private const val TAG = "AuthRepository"
+        private const val USE_MOCK_API = true // ⚠️ CAMBIAR A FALSE EN PRODUCCIÓN
+    }
+
+    suspend fun login(email: String, password: String): Result<User> {
+        return withContext(Dispatchers.IO) {
+            try {
+                if (email.isBlank() || password.isBlank()) {
+                    return@withContext Result.failure(
+                        Exception("El email y la contraseña son obligatorios")
+                    )
+                }
+
+                if (!android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
+                    return@withContext Result.failure(
+                        Exception("El formato del email no es válido")
+                    )
+                }
+
+                Log.d(TAG, "Intentando login para usuario: $email")
+
+                val loginRequest = LoginRequest(email, password)
+
+                // ⚠️ USAR MOCK PARA PRUEBAS
+                val response = if (USE_MOCK_API) {
+                    MockApiService.login(loginRequest)
+                } else {
+                    RetrofitClient.apiService.login(loginRequest)
+                }
+
+                if (response.isSuccessful) {
+                    val loginResponse = response.body()
+
+                    if (loginResponse?.success == true && loginResponse.user != null) {
+                        val user = loginResponse.user
+                        secureStorage.saveUserSession(user)
+
+                        Log.d(TAG, "Login exitoso para: $email")
+                        Result.success(user)
+                    } else {
+                        Log.w(TAG, "Login fallido: ${loginResponse?.message}")
+                        Result.failure(
+                            Exception(loginResponse?.message ?: "Error en el login")
+                        )
+                    }
+                } else {
+                    val errorMessage = when (response.code()) {
+                        401 -> "Credenciales incorrectas"
+                        404 -> "Servicio no disponible"
+                        500 -> "Error en el servidor"
+                        else -> "Error de conexión: ${response.code()}"
+                    }
+                    Log.e(TAG, "Error HTTP: ${response.code()}")
+                    Result.failure(Exception(errorMessage))
+                }
+
+            } catch (e: Exception) {
+                Log.e(TAG, "Excepción en login", e)
+                Result.failure(
+                    Exception("Error de conexión: ${e.localizedMessage}")
+                )
+            }
+        }
+    }
+    // Resto de funciones igual...
+    // validateToken, logout, etc. también deben usar USE_MOCK_API
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/network/MockApiService.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/network/MockApiService.kt b/app/src/main/java/mx/edu/utng/arg/security01/network/MockApiService.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/network/MockApiService.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,127 @@
+package mx.edu.utng.arg.security01.network
+
+import kotlinx.coroutines.delay
+import mx.edu.utng.arg.security01.models.LoginRequest
+import mx.edu.utng.arg.security01.models.LoginResponse
+import mx.edu.utng.arg.security01.models.User
+import retrofit2.Response
+import java.util.UUID
+
+/**
+ * Servicio de API simulado para pruebas locales
+ *
+ * EXPLICACIÓN PARA ESTUDIANTES:
+ * Esta clase simula un servidor real sin necesidad de tener uno activo.
+ * Es como practicar fútbol con conos en lugar de jugadores reales.
+ *
+ * USO: Mientras desarrollan, pueden usar esto en lugar de la API real.
+ * Cuando tengan servidor listo, solo cambian a RetrofitClient.
+ */
+object MockApiService {
+
+    // Usuarios de prueba
+    private val mockUsers = listOf(
+        User(
+            id = "1",
+            email = "alumno@utng.edu.mx",
+            name = "Estudiante Demo",
+            token = generateToken()
+        ),
+        User(
+            id = "2",
+            email = "profesor@utng.edu.mx",
+            name = "Profesor Demo",
+            token = generateToken()
+        ),
+        User(
+            id = "3",
+            email = "admin@utng.edu.mx",
+            name = "Administrador Demo",
+            token = generateToken()
+        )
+    )
+
+    /**
+     * Simula el endpoint de login
+     *
+     * CREDENCIALES DE PRUEBA:
+     * - Email: alumno@utng.edu.mx | Password: 123456
+     * - Email: profesor@utng.edu.mx | Password: 123456
+     * - Email: admin@utng.edu.mx | Password: 123456
+     */
+    suspend fun login(loginRequest: LoginRequest): Response<LoginResponse> {
+        // Simulamos latencia de red (1-2 segundos)
+        delay((1000..2000).random().toLong())
+
+        // Validaciones básicas
+        if (loginRequest.email.isBlank() || loginRequest.password.isBlank()) {
+            return Response.success(
+                LoginResponse(
+                    success = false,
+                    message = "Email y contraseña son obligatorios",
+                    user = null
+                )
+            )
+        }
+
+        // Buscamos el usuario
+        val user = mockUsers.find { it.email == loginRequest.email }
+
+        return if (user != null && loginRequest.password == "123456") {
+            // Login exitoso
+            val userWithNewToken = user.copy(token = generateToken())
+            Response.success(
+                LoginResponse(
+                    success = true,
+                    message = "Login exitoso",
+                    user = userWithNewToken
+                )
+            )
+        } else {
+            // Credenciales incorrectas
+            Response.success(
+                LoginResponse(
+                    success = false,
+                    message = "Credenciales incorrectas",
+                    user = null
+                )
+            )
+        }
+    }
+
+    /**
+     * Simula la validación de token
+     */
+    suspend fun validateToken(token: String): Response<LoginResponse> {
+        delay(500)
+
+        // Simulamos que todos los tokens son válidos
+        // En producción, el servidor verificaría la firma JWT
+        return Response.success(
+            LoginResponse(
+                success = true,
+                message = "Token válido",
+                user = null
+            )
+        )
+    }
+
+    /**
+     * Simula el logout
+     */
+    suspend fun logout(token: String): Response<Unit> {
+        delay(300)
+        return Response.success(Unit)
+    }
+
+    /**
+     * Genera un token JWT simulado
+     *
+     * NOTA: En producción, el token lo genera el servidor
+     * con una firma criptográfica real (HMAC, RSA, etc.)
+     */
+    private fun generateToken(): String {
+        val randomPart = UUID.randomUUID().toString().replace("-", "")
+        return "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.$randomPart.mock_signature"
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/network/RetrofitClient.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/network/RetrofitClient.kt b/app/src/main/java/mx/edu/utng/arg/security01/network/RetrofitClient.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/network/RetrofitClient.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,106 @@
+package mx.edu.utng.arg.security01.network
+
+import android.util.Log
+import okhttp3.OkHttpClient
+import okhttp3.logging.HttpLoggingInterceptor
+import retrofit2.Retrofit
+import retrofit2.converter.gson.GsonConverterFactory
+import java.util.concurrent.TimeUnit
+
+/**
+ * Clase Singleton para configurar Retrofit
+ *
+ * IMPORTANTE PARA ESTUDIANTES:
+ * Un Singleton es como tener UN SOLO teléfono en toda la escuela
+ * para llamar al exterior. Todos usan el mismo teléfono, no necesitamos
+ * tener uno por persona.
+ */
+object RetrofitClient {
+
+    // URL base de la API - CAMBIAR POR LA URL REAL
+    private const val BASE_URL = "https://api.ejemplo.com/"
+
+    // Tag para logs - NUNCA mostrar tokens aquí
+    private const val TAG = "RetrofitClient"
+
+    /**
+     * Configuramos el interceptor de logs
+     * CRÍTICO: En producción, este debe estar desactivado o solo mostrar headers
+     */
+    private val loggingInterceptor = HttpLoggingInterceptor { message ->
+        // Filtramos información sensible antes de hacer log
+        val filteredMessage = filterSensitiveData(message)
+        Log.d(TAG, filteredMessage)
+    }.apply {
+        // CAMBIAR A NONE en producción
+        level = HttpLoggingInterceptor.Level.BODY
+    }
+
+    /**
+     * Configuramos el cliente HTTP
+     */
+    private val client = OkHttpClient.Builder()
+        .addInterceptor(loggingInterceptor)
+        .addInterceptor { chain ->
+            // Aquí podemos agregar headers comunes a todas las peticiones
+            val request = chain.request().newBuilder()
+                .addHeader("Content-Type", "application/json")
+                .addHeader("Accept", "application/json")
+                .build()
+            chain.proceed(request)
+        }
+        .connectTimeout(30, TimeUnit.SECONDS) // Tiempo máximo para conectar
+        .readTimeout(30, TimeUnit.SECONDS)    // Tiempo máximo para leer respuesta
+        .writeTimeout(30, TimeUnit.SECONDS)   // Tiempo máximo para enviar datos
+        .build()
+
+    /**
+     * Instancia de Retrofit - se crea una sola vez
+     */
+    private val retrofit = Retrofit.Builder()
+        .baseUrl(BASE_URL)
+        .client(client)
+        .addConverterFactory(GsonConverterFactory.create())
+        .build()
+
+    /**
+     * Servicio de API - punto de acceso para hacer llamadas
+     */
+    val apiService: ApiService = retrofit.create(ApiService::class.java)
+
+    /**
+     * Función para filtrar datos sensibles de los logs
+     * NUNCA debe aparecer en logs:
+     * - Passwords
+     * - Tokens completos
+     * - Información personal sensible
+     */
+    private fun filterSensitiveData(message: String): String {
+        var filtered = message
+
+        // Ocultamos passwords
+        if (filtered.contains("password")) {
+            filtered = filtered.replace(
+                Regex("\"password\"\\s*:\\s*\"[^\"]*\""),
+                "\"password\":\"***HIDDEN***\""
+            )
+        }
+
+        // Ocultamos tokens completos, solo mostramos primeros y últimos 4 caracteres
+        if (filtered.contains("Authorization")) {
+            filtered = filtered.replace(
+                Regex("Bearer [A-Za-z0-9._-]+"),
+                "Bearer ****"
+            )
+        }
+
+        if (filtered.contains("\"token\"")) {
+            filtered = filtered.replace(
+                Regex("\"token\"\\s*:\\s*\"([^\"]{4})[^\"]*([^\"]{4})\""),
+                "\"token\":\"$1****$2\""
+            )
+        }
+
+        return filtered
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/repository/AuthRepository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/repository/AuthRepository.kt b/app/src/main/java/mx/edu/utng/arg/security01/repository/AuthRepository.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/repository/AuthRepository.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,196 @@
+package mx.edu.utng.arg.security01.repository
+
+import android.content.Context
+import android.util.Log
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.withContext
+import mx.edu.utng.arg.security01.models.LoginRequest
+import mx.edu.utng.arg.security01.models.User
+import mx.edu.utng.arg.security01.network.RetrofitClient
+import mx.edu.utng.arg.security01.security.SecureStorage
+
+/**
+ * Repositorio de Autenticación
+ *
+ * PATRÓN REPOSITORY EXPLICADO:
+ * Imaginen una biblioteca. Ustedes (UI) no van directamente a buscar
+ * entre millones de libros. Le piden al bibliotecario (Repository)
+ * que lo haga por ustedes. El bibliotecario sabe dónde buscar: en los
+ * estantes (API) o en el archivero local (SecureStorage).
+ */
+class AuthRepository(context: Context) {
+
+    private val secureStorage = SecureStorage(context)
+    private val apiService = RetrofitClient.apiService
+
+    companion object {
+        private const val TAG = "AuthRepository"
+        // NUNCA hacer Log.d() con tokens o passwords
+    }
+
+    /**
+     * Realiza el login del usuario
+     *
+     * PROCESO PASO A PASO:
+     * 1. Valida que los campos no estén vacíos
+     * 2. Envía credenciales al servidor
+     * 3. Si es exitoso, guarda la sesión localmente
+     * 4. Retorna el resultado
+     */
+    suspend fun login(email: String, password: String): Result<User> {
+        return withContext(Dispatchers.IO) {
+            try {
+                // Validación básica
+                if (email.isBlank() || password.isBlank()) {
+                    return@withContext Result.failure(
+                        Exception("El email y la contraseña son obligatorios")
+                    )
+                }
+
+                // Validación de formato de email
+                if (!android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
+                    return@withContext Result.failure(
+                        Exception("El formato del email no es válido")
+                    )
+                }
+
+                Log.d(TAG, "Intentando login para usuario: $email")
+                // NUNCA: Log.d(TAG, "Password: $password") ❌
+
+                // Creamos la petición
+                val loginRequest = LoginRequest(email, password)
+
+                // Hacemos la llamada a la API
+                val response = apiService.login(loginRequest)
+
+                // Verificamos la respuesta
+                if (response.isSuccessful) {
+                    val loginResponse = response.body()
+
+                    if (loginResponse?.success == true && loginResponse.user != null) {
+                        // Login exitoso - guardamos la sesión
+                        val user = loginResponse.user
+                        secureStorage.saveUserSession(user)
+
+                        Log.d(TAG, "Login exitoso para: $email")
+                        Result.success(user)
+                    } else {
+                        Log.w(TAG, "Login fallido: ${loginResponse?.message}")
+                        Result.failure(
+                            Exception(loginResponse?.message ?: "Error en el login")
+                        )
+                    }
+                } else {
+                    // Error HTTP
+                    val errorMessage = when (response.code()) {
+                        401 -> "Credenciales incorrectas"
+                        404 -> "Servicio no disponible"
+                        500 -> "Error en el servidor"
+                        else -> "Error de conexión: ${response.code()}"
+                    }
+                    Log.e(TAG, "Error HTTP: ${response.code()}")
+                    Result.failure(Exception(errorMessage))
+                }
+
+            } catch (e: Exception) {
+                // Capturamos cualquier error inesperado
+                Log.e(TAG, "Excepción en login", e)
+                Result.failure(
+                    Exception("Error de conexión: ${e.localizedMessage}")
+                )
+            }
+        }
+    }
+
+    /**
+     * Verifica si hay una sesión activa guardada localmente
+     */
+    fun isLoggedIn(): Boolean {
+        return secureStorage.isLoggedIn()
+    }
+
+    /**
+     * Obtiene los datos del usuario actual
+     */
+    fun getCurrentUser(): User? {
+        return secureStorage.getUserData()
+    }
+
+    /**
+     * Valida el token con el servidor
+     * Útil para verificar si la sesión sigue siendo válida
+     */
+    suspend fun validateToken(): Result<Boolean> {
+        return withContext(Dispatchers.IO) {
+            try {
+                val token = secureStorage.getToken()
+
+                if (token == null) {
+                    return@withContext Result.success(false)
+                }
+
+                val response = apiService.validateToken("Bearer $token")
+
+                if (response.isSuccessful && response.body()?.success == true) {
+                    // Token válido, actualizamos timestamp
+                    secureStorage.updateSessionTimestamp()
+                    Result.success(true)
+                } else {
+                    // Token inválido, limpiamos sesión
+                    logout()
+                    Result.success(false)
+                }
+
+            } catch (e: Exception) {
+                Log.e(TAG, "Error validando token", e)
+                Result.failure(e)
+            }
+        }
+    }
+
+    /**
+     * Cierra la sesión del usuario
+     *
+     * IMPORTANTE: Siempre debe limpiar:
+     * 1. Datos locales
+     * 2. Sesión en el servidor (si aplica)
+     */
+    suspend fun logout(): Result<Boolean> {
+        return withContext(Dispatchers.IO) {
+            try {
+                val token = secureStorage.getToken()
+
+                // Intentamos cerrar sesión en el servidor
+                if (token != null) {
+                    try {
+                        apiService.logout("Bearer $token")
+                        Log.d(TAG, "Sesión cerrada en el servidor")
+                    } catch (e: Exception) {
+                        // Si falla, continuamos cerrando sesión local
+                        Log.w(TAG, "No se pudo cerrar sesión en servidor", e)
+                    }
+                }
+
+                // Limpiamos datos locales SIEMPRE
+                secureStorage.clearSession()
+                Log.d(TAG, "Sesión local limpiada")
+
+                Result.success(true)
+
+            } catch (e: Exception) {
+                Log.e(TAG, "Error en logout", e)
+                // Aún así limpiamos local
+                secureStorage.clearSession()
+                Result.failure(e)
+            }
+        }
+    }
+
+    /**
+     * Actualiza el timestamp de actividad del usuario
+     * Llamar en eventos importantes de la app
+     */
+    fun updateActivity() {
+        secureStorage.updateSessionTimestamp()
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/security/SecureStorage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/security/SecureStorage.kt b/app/src/main/java/mx/edu/utng/arg/security01/security/SecureStorage.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/security/SecureStorage.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,145 @@
+package mx.edu.utng.arg.security01.security
+
+import android.content.Context
+import android.content.SharedPreferences
+import androidx.security.crypto.EncryptedSharedPreferences
+import androidx.security.crypto.MasterKey
+import mx.edu.utng.arg.security01.models.User
+
+/**
+ * Clase para almacenar datos sensibles de forma ENCRIPTADA
+ *
+ * ANALOGÍA PARA ESTUDIANTES:
+ * Imaginen que tienen un diario personal. SharedPreferences normal
+ * es como escribir en el diario en lenguaje normal - cualquiera que
+ * lo encuentre puede leerlo.
+ *
+ * EncryptedSharedPreferences es como escribir en código secreto
+ * que solo ustedes pueden descifrar.
+ */
+class SecureStorage(context: Context) {
+
+    companion object {
+        private const val PREFS_NAME = "secure_prefs"
+        private const val KEY_TOKEN = "auth_token"
+        private const val KEY_USER_ID = "user_id"
+        private const val KEY_USER_EMAIL = "user_email"
+        private const val KEY_USER_NAME = "user_name"
+        private const val KEY_IS_LOGGED_IN = "is_logged_in"
+        private const val KEY_SESSION_TIMESTAMP = "session_timestamp"
+
+        // Tiempo de expiración de sesión: 24 horas
+        private const val SESSION_TIMEOUT = 24 * 60 * 60 * 1000L // milisegundos
+    }
+
+    // Creamos la "llave maestra" para encriptar
+    private val masterKey = MasterKey.Builder(context)
+        .setKeyScheme(MasterKey.KeyScheme.AES256_GCM) // Algoritmo de encriptación militar
+        .build()
+
+    // Creamos las preferencias encriptadas
+    private val sharedPreferences: SharedPreferences = EncryptedSharedPreferences.create(
+        context,
+        PREFS_NAME,
+        masterKey,
+        EncryptedSharedPreferences.PrefKeyEncryptionScheme.AES256_SIV,
+        EncryptedSharedPreferences.PrefValueEncryptionScheme.AES256_GCM
+    )
+
+    /**
+     * Guarda la sesión completa del usuario
+     * Esta función se llama después de un login exitoso
+     */
+    fun saveUserSession(user: User) {
+        sharedPreferences.edit().apply {
+            putString(KEY_TOKEN, user.token)
+            putString(KEY_USER_ID, user.id)
+            putString(KEY_USER_EMAIL, user.email)
+            putString(KEY_USER_NAME, user.name)
+            putBoolean(KEY_IS_LOGGED_IN, true)
+            putLong(KEY_SESSION_TIMESTAMP, System.currentTimeMillis())
+            apply() // Guardamos de forma asíncrona
+        }
+    }
+
+    /**
+     * Obtiene el token de autenticación
+     * IMPORTANTE: Este token NUNCA debe mostrarse en logs o UI
+     */
+    fun getToken(): String? {
+        return if (isSessionValid()) {
+            sharedPreferences.getString(KEY_TOKEN, null)
+        } else {
+            clearSession() // Sesión expirada, limpiamos todo
+            null
+        }
+    }
+
+    /**
+     * Recupera los datos del usuario guardados
+     */
+    fun getUserData(): User? {
+        if (!isSessionValid()) {
+            clearSession()
+            return null
+        }
+
+        val token = sharedPreferences.getString(KEY_TOKEN, null)
+        val id = sharedPreferences.getString(KEY_USER_ID, null)
+        val email = sharedPreferences.getString(KEY_USER_EMAIL, null)
+        val name = sharedPreferences.getString(KEY_USER_NAME, null)
+
+        // Si todos los datos existen, creamos el objeto User
+        return if (token != null && id != null && email != null && name != null) {
+            User(id, email, name, token)
+        } else {
+            null
+        }
+    }
+
+    /**
+     * Verifica si el usuario tiene sesión activa
+     */
+    fun isLoggedIn(): Boolean {
+        return sharedPreferences.getBoolean(KEY_IS_LOGGED_IN, false) && isSessionValid()
+    }
+
+    /**
+     * Verifica si la sesión no ha expirado
+     * CONCEPTO IMPORTANTE: Las sesiones deben tener tiempo límite por seguridad
+     */
+    private fun isSessionValid(): Boolean {
+        val sessionTimestamp = sharedPreferences.getLong(KEY_SESSION_TIMESTAMP, 0L)
+        val currentTime = System.currentTimeMillis()
+        val sessionAge = currentTime - sessionTimestamp
+
+        return sessionAge < SESSION_TIMEOUT
+    }
+
+    /**
+     * Actualiza el timestamp de la sesión
+     * Llamar cada vez que el usuario interactúe con la app
+     */
+    fun updateSessionTimestamp() {
+        sharedPreferences.edit().apply {
+            putLong(KEY_SESSION_TIMESTAMP, System.currentTimeMillis())
+            apply()
+        }
+    }
+
+    /**
+     * Cierra la sesión y elimina TODOS los datos sensibles
+     * CRÍTICO: Debe ser exhaustivo para evitar fugas de información
+     */
+    fun clearSession() {
+        sharedPreferences.edit().apply {
+            remove(KEY_TOKEN)
+            remove(KEY_USER_ID)
+            remove(KEY_USER_EMAIL)
+            remove(KEY_USER_NAME)
+            putBoolean(KEY_IS_LOGGED_IN, false)
+            remove(KEY_SESSION_TIMESTAMP)
+            apply()
+        }
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/components/CustomTextField.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/components/CustomTextField.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/components/CustomTextField.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/components/CustomTextField.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,93 @@
+package mx.edu.utng.arg.security01.ui.components
+
+import androidx.compose.foundation.layout.fillMaxWidth
+import androidx.compose.foundation.text.KeyboardActions
+import androidx.compose.foundation.text.KeyboardOptions
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.Visibility
+import androidx.compose.material.icons.filled.VisibilityOff
+import androidx.compose.material3.*
+import androidx.compose.runtime.*
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.graphics.vector.ImageVector
+import androidx.compose.ui.text.input.ImeAction
+import androidx.compose.ui.text.input.KeyboardType
+import androidx.compose.ui.text.input.PasswordVisualTransformation
+import androidx.compose.ui.text.input.VisualTransformation
+
+/**
+ * Campo de texto personalizado y reutilizable
+ *
+ * Explicación:
+ * Este componente es como crear un "molde" para hacer galletas.
+ * Una vez que tenemos el molde (componente), podemos hacer muchas
+ * galletas (campos de texto) con la misma forma pero diferente sabor (contenido).
+ *
+ * Esto se llama REUTILIZACIÓN DE CÓDIGO - uno de los principios más
+ * importantes de la programación.
+ */
+@Composable
+fun CustomTextField(
+    value: String,
+    onValueChange: (String) -> Unit,
+    label: String,
+    modifier: Modifier = Modifier,
+    leadingIcon: ImageVector? = null,
+    isPassword: Boolean = false,
+    keyboardType: KeyboardType = KeyboardType.Text,
+    imeAction: ImeAction = ImeAction.Next,
+    onImeAction: () -> Unit = {},
+    isError: Boolean = false,
+    errorMessage: String? = null,
+    enabled: Boolean = true
+) {
+    // Estado para mostrar/ocultar contraseña
+    var passwordVisible by remember { mutableStateOf(false) }
+
+    OutlinedTextField(
+        value = value,
+        onValueChange = onValueChange,
+        label = { Text(label) },
+        modifier = modifier.fillMaxWidth(),
+        leadingIcon = if (leadingIcon != null) {
+            { Icon(imageVector = leadingIcon, contentDescription = null) }
+        } else null,
+        trailingIcon = if (isPassword) {
+            {
+                IconButton(onClick = { passwordVisible = !passwordVisible }) {
+                    Icon(
+                        imageVector = if (passwordVisible)
+                            Icons.Filled.Visibility
+                        else
+                            Icons.Filled.VisibilityOff,
+                        contentDescription = if (passwordVisible)
+                            "Ocultar contraseña"
+                        else
+                            "Mostrar contraseña"
+                    )
+                }
+            }
+        } else null,
+        visualTransformation = if (isPassword && !passwordVisible)
+            PasswordVisualTransformation()
+        else
+            VisualTransformation.None,
+        keyboardOptions = KeyboardOptions(
+            keyboardType = keyboardType,
+            imeAction = imeAction
+        ),
+        keyboardActions = KeyboardActions(
+            onAny = { onImeAction() }
+        ),
+        isError = isError,
+        supportingText = if (isError && errorMessage != null) {
+            { Text(errorMessage, color = MaterialTheme.colorScheme.error) }
+        } else null,
+        enabled = enabled,
+        singleLine = true,
+        colors = OutlinedTextFieldDefaults.colors(
+            focusedBorderColor = MaterialTheme.colorScheme.primary,
+            unfocusedBorderColor = MaterialTheme.colorScheme.outline,
+        )
+    )
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/components/ErrorDialog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/components/ErrorDialog.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/components/ErrorDialog.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/components/ErrorDialog.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,51 @@
+package mx.edu.utng.arg.security01.ui.components
+
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.Error
+import androidx.compose.material3.*
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.graphics.vector.ImageVector
+
+/**
+ * Diálogo para mostrar errores
+ *
+ * ANALOGÍA: Es como una ventana emergente que aparece
+ * cuando algo sale mal, mostrando qué pasó.
+ */
+@Composable
+fun ErrorDialog(
+    title: String = "Error",
+    message: String,
+    icon: ImageVector = Icons.Filled.Error,
+    onDismiss: () -> Unit,
+    onConfirm: () -> Unit = onDismiss
+) {
+    AlertDialog(
+        onDismissRequest = onDismiss,
+        icon = {
+            Icon(
+                imageVector = icon,
+                contentDescription = null,
+                tint = MaterialTheme.colorScheme.error
+            )
+        },
+        title = {
+            Text(
+                text = title,
+                style = MaterialTheme.typography.headlineSmall
+            )
+        },
+        text = {
+            Text(
+                text = message,
+                style = MaterialTheme.typography.bodyMedium
+            )
+        },
+        confirmButton = {
+            TextButton(onClick = onConfirm) {
+                Text("Aceptar")
+            }
+        },
+        dismissButton = null
+    )
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/components/LoadingButton.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/components/LoadingButton.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/components/LoadingButton.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/components/LoadingButton.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,58 @@
+package mx.edu.utng.arg.security01.ui.components
+
+import androidx.compose.foundation.layout.*
+import androidx.compose.material3.*
+import androidx.compose.runtime.Composable
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.unit.dp
+
+/**
+ * Botón con indicador de carga
+ *
+ * EXPLICACIÓN: Este botón puede mostrar un "spinner" de carga
+ * mientras procesa algo (como al hacer login).
+ * Es como el botón de un ascensor que se ilumina mientras sube.
+ */
+@Composable
+fun LoadingButton(
+    text: String,
+    onClick: () -> Unit,
+    modifier: Modifier = Modifier,
+    isLoading: Boolean = false,
+    enabled: Boolean = true
+) {
+    Button(
+        onClick = onClick,
+        modifier = modifier
+            .fillMaxWidth()
+            .height(56.dp),
+        enabled = enabled && !isLoading,
+        colors = ButtonDefaults.buttonColors(
+            containerColor = MaterialTheme.colorScheme.primary,
+            contentColor = MaterialTheme.colorScheme.onPrimary
+        )
+    ) {
+        if (isLoading) {
+            // Mostramos el spinner de carga
+            Row(
+                horizontalArrangement = Arrangement.Center,
+                verticalAlignment = Alignment.CenterVertically
+            ) {
+                CircularProgressIndicator(
+                    modifier = Modifier.size(24.dp),
+                    color = MaterialTheme.colorScheme.onPrimary,
+                    strokeWidth = 2.dp
+                )
+                Spacer(modifier = Modifier.width(8.dp))
+                Text("Cargando...")
+            }
+        } else {
+            // Mostramos el texto normal
+            Text(
+                text = text,
+                style = MaterialTheme.typography.titleMedium
+            )
+        }
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/screens/HomeScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/HomeScreen.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/HomeScreen.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/HomeScreen.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,375 @@
+package mx.edu.utng.arg.security01.ui.screens
+
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.rememberScrollState
+import androidx.compose.foundation.shape.RoundedCornerShape
+import androidx.compose.foundation.verticalScroll
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.ExitToApp
+import androidx.compose.material.icons.filled.Person
+import androidx.compose.material.icons.filled.Security
+import androidx.compose.material.icons.filled.Verified
+import androidx.compose.material3.*
+import androidx.compose.runtime.*
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.clip
+import androidx.compose.ui.unit.dp
+import androidx.lifecycle.viewmodel.compose.viewModel
+import mx.edu.utng.arg.security01.models.AuthState
+import mx.edu.utng.arg.security01.models.User
+import mx.edu.utng.arg.security01.viewmodel.AuthViewModel
+
+/**
+ * Pantalla principal después del login
+ *
+ * Explicación:
+ * Esta es la pantalla que ven los usuarios después de iniciar sesión.
+ * Muestra información del usuario y permite cerrar sesión.
+ *
+ * Es como la página principal de su perfil en redes sociales.
+ */
+@OptIn(ExperimentalMaterial3Api::class)
+@Composable
+fun HomeScreen(
+    viewModel: AuthViewModel = viewModel(),
+    onLogout: () -> Unit
+) {
+    // ============================================
+    // ESTADOS Y OBSERVABLES
+    // ============================================
+    val authState by viewModel.authState.collectAsState()
+    val currentUser by viewModel.currentUser.collectAsState()
+
+    var showLogoutDialog by remember { mutableStateOf(false) }
+
+    // ============================================
+    // OBSERVAR CAMBIOS DE ESTADO
+    // ============================================
+    LaunchedEffect(authState) {
+        when (authState) {
+            is AuthState.Logout -> {
+                onLogout()
+            }
+            else -> {}
+        }
+    }
+
+    // ============================================
+    // ACTUALIZAR ACTIVIDAD DEL USUARIO
+    // ============================================
+    /**
+     * Este efecto actualiza el timestamp de sesión
+     * cada vez que el usuario entra a esta pantalla.
+     *
+     * IMPORTANTE: Esto mantiene la sesión activa mientras
+     * el usuario está usando la app.
+     */
+    DisposableEffect(Unit) {
+        viewModel.updateUserActivity()
+        onDispose { }
+    }
+
+    // ============================================
+    // UI PRINCIPAL
+    // ============================================
+    Scaffold(
+        topBar = {
+            TopAppBar(
+                title = {
+                    Text(
+                        "Mi Perfil",
+                        style = MaterialTheme.typography.titleLarge
+                    )
+                },
+                colors = TopAppBarDefaults.topAppBarColors(
+                    containerColor = MaterialTheme.colorScheme.primary,
+                    titleContentColor = MaterialTheme.colorScheme.onPrimary
+                ),
+                actions = {
+                    // Botón de logout en la barra superior
+                    IconButton(onClick = { showLogoutDialog = true }) {
+                        Icon(
+                            imageVector = Icons.Default.ExitToApp,
+                            contentDescription = "Cerrar sesión",
+                            tint = MaterialTheme.colorScheme.onPrimary
+                        )
+                    }
+                }
+            )
+        }
+    ) { paddingValues ->
+        Column(
+            modifier = Modifier
+                .fillMaxSize()
+                .padding(paddingValues)
+                .verticalScroll(rememberScrollState())
+                .padding(24.dp),
+            horizontalAlignment = Alignment.CenterHorizontally
+        ) {
+            Spacer(modifier = Modifier.height(32.dp))
+
+            // ============================================
+            // TARJETA DE INFORMACIÓN DEL USUARIO
+            // ============================================
+            currentUser?.let { user ->
+                UserInfoCard(user = user)
+
+                Spacer(modifier = Modifier.height(32.dp))
+
+                // ============================================
+                // SECCIÓN DE SEGURIDAD
+                // ============================================
+                SecuritySection(viewModel = viewModel)
+
+                Spacer(modifier = Modifier.height(32.dp))
+
+                // ============================================
+                // BOTÓN DE CERRAR SESIÓN
+                // ============================================
+                OutlinedButton(
+                    onClick = { showLogoutDialog = true },
+                    modifier = Modifier
+                        .fillMaxWidth()
+                        .height(56.dp),
+                    colors = ButtonDefaults.outlinedButtonColors(
+                        contentColor = MaterialTheme.colorScheme.error
+                    ),
+                    border = ButtonDefaults.outlinedButtonBorder.copy(
+                        width = 2.dp
+                    )
+                ) {
+                    Icon(
+                        imageVector = Icons.Default.ExitToApp,
+                        contentDescription = null,
+                        modifier = Modifier.size(24.dp)
+                    )
+                    Spacer(modifier = Modifier.width(8.dp))
+                    Text(
+                        text = "Cerrar Sesión",
+                        style = MaterialTheme.typography.titleMedium
+                    )
+                }
+            }
+        }
+
+        // ============================================
+        // DIÁLOGO DE CONFIRMACIÓN DE LOGOUT
+        // ============================================
+        if (showLogoutDialog) {
+            AlertDialog(
+                onDismissRequest = { showLogoutDialog = false },
+                icon = {
+                    Icon(
+                        imageVector = Icons.Default.ExitToApp,
+                        contentDescription = null,
+                        tint = MaterialTheme.colorScheme.primary
+                    )
+                },
+                title = {
+                    Text(
+                        text = "Cerrar Sesión",
+                        style = MaterialTheme.typography.headlineSmall
+                    )
+                },
+                text = {
+                    Text(
+                        text = "¿Estás seguro de que deseas cerrar sesión?",
+                        style = MaterialTheme.typography.bodyMedium
+                    )
+                },
+                confirmButton = {
+                    TextButton(
+                        onClick = {
+                            showLogoutDialog = false
+                            viewModel.logout()
+                        }
+                    ) {
+                        Text("Cerrar Sesión")
+                    }
+                },
+                dismissButton = {
+                    TextButton(onClick = { showLogoutDialog = false }) {
+                        Text("Cancelar")
+                    }
+                }
+            )
+        }
+    }
+}
+
+/**
+ * Tarjeta que muestra la información del usuario
+ *
+ * COMPOSABLE INTERNO: Esta función solo se usa dentro de HomeScreen
+ * Es como una "subreceta" dentro de una receta principal.
+ */
+@Composable
+private fun UserInfoCard(user: User) {
+    Card(
+        modifier = Modifier.fillMaxWidth(),
+        elevation = CardDefaults.cardElevation(defaultElevation = 4.dp),
+        colors = CardDefaults.cardColors(
+            containerColor = MaterialTheme.colorScheme.surface
+        )
+    ) {
+        Column(
+            modifier = Modifier
+                .fillMaxWidth()
+                .padding(24.dp),
+            horizontalAlignment = Alignment.CenterHorizontally
+        ) {
+            // Avatar del usuario
+            Box(
+                modifier = Modifier
+                    .size(80.dp)
+                    .clip(RoundedCornerShape(40.dp))
+                    .background(MaterialTheme.colorScheme.primaryContainer),
+                contentAlignment = Alignment.Center
+            ) {
+                Icon(
+                    imageVector = Icons.Default.Person,
+                    contentDescription = "Avatar",
+                    modifier = Modifier.size(48.dp),
+                    tint = MaterialTheme.colorScheme.onPrimaryContainer
+                )
+            }
+
+            Spacer(modifier = Modifier.height(16.dp))
+
+            // Nombre del usuario
+            Text(
+                text = user.name,
+                style = MaterialTheme.typography.headlineSmall,
+                color = MaterialTheme.colorScheme.onSurface
+            )
+
+            Spacer(modifier = Modifier.height(8.dp))
+
+            // Email del usuario
+            Row(
+                verticalAlignment = Alignment.CenterVertically,
+                horizontalArrangement = Arrangement.Center
+            ) {
+                Icon(
+                    imageVector = Icons.Default.Verified,
+                    contentDescription = null,
+                    modifier = Modifier.size(16.dp),
+                    tint = MaterialTheme.colorScheme.primary
+                )
+                Spacer(modifier = Modifier.width(4.dp))
+                Text(
+                    text = user.email,
+                    style = MaterialTheme.typography.bodyMedium,
+                    color = MaterialTheme.colorScheme.onSurfaceVariant
+                )
+            }
+
+            Spacer(modifier = Modifier.height(8.dp))
+
+            // ID del usuario (solo para demostración)
+            Text(
+                text = "ID: ${user.id}",
+                style = MaterialTheme.typography.bodySmall,
+                color = MaterialTheme.colorScheme.onSurfaceVariant
+            )
+        }
+    }
+}
+
+/**
+ * Sección de información de seguridad
+ *
+ * EXPLICACIÓN: Muestra información relevante sobre la sesión
+ * y medidas de seguridad activas.
+ */
+@Composable
+private fun SecuritySection(viewModel: AuthViewModel) {
+    Card(
+        modifier = Modifier.fillMaxWidth(),
+        elevation = CardDefaults.cardElevation(defaultElevation = 2.dp),
+        colors = CardDefaults.cardColors(
+            containerColor = MaterialTheme.colorScheme.surfaceVariant
+        )
+    ) {
+        Column(
+            modifier = Modifier
+                .fillMaxWidth()
+                .padding(20.dp)
+        ) {
+            Row(
+                verticalAlignment = Alignment.CenterVertically
+            ) {
+                Icon(
+                    imageVector = Icons.Default.Security,
+                    contentDescription = null,
+                    tint = MaterialTheme.colorScheme.primary,
+                    modifier = Modifier.size(24.dp)
+                )
+                Spacer(modifier = Modifier.width(12.dp))
+                Text(
+                    text = "Información de Seguridad",
+                    style = MaterialTheme.typography.titleMedium,
+                    color = MaterialTheme.colorScheme.onSurface
+                )
+            }
+
+            Spacer(modifier = Modifier.height(16.dp))
+
+            // Items de seguridad
+            SecurityItem(
+                title = "Sesión Encriptada",
+                description = "Tus datos están protegidos con encriptación AES-256"
+            )
+
+            Spacer(modifier = Modifier.height(12.dp))
+
+            SecurityItem(
+                title = "Token de Autenticación",
+                description = "Token JWT activo y verificado"
+            )
+
+            Spacer(modifier = Modifier.height(12.dp))
+
+            SecurityItem(
+                title = "Expiración de Sesión",
+                description = "Tu sesión expirará después de 24 horas de inactividad"
+            )
+
+            Spacer(modifier = Modifier.height(16.dp))
+
+            // Botón para validar token
+            TextButton(
+                onClick = { viewModel.validateToken() },
+                modifier = Modifier.fillMaxWidth()
+            ) {
+                Text("Validar Token en Servidor")
+            }
+        }
+    }
+}
+
+/**
+ * Item individual de seguridad
+ */
+@Composable
+private fun SecurityItem(
+    title: String,
+    description: String
+) {
+    Column {
+        Text(
+            text = title,
+            style = MaterialTheme.typography.titleSmall,
+            color = MaterialTheme.colorScheme.onSurface
+        )
+        Spacer(modifier = Modifier.height(4.dp))
+        Text(
+            text = description,
+            style = MaterialTheme.typography.bodySmall,
+            color = MaterialTheme.colorScheme.onSurfaceVariant,
+            lineHeight = MaterialTheme.typography.bodySmall.fontSize * 1.5f
+        )
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/screens/LoginScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/LoginScreen.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/LoginScreen.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/LoginScreen.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,278 @@
+package mx.edu.utng.arg.security01.ui.screens
+
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.layout.*
+import androidx.compose.foundation.rememberScrollState
+import androidx.compose.foundation.verticalScroll
+import androidx.compose.material.icons.Icons
+import androidx.compose.material.icons.filled.Email
+import androidx.compose.material.icons.filled.Lock
+import androidx.compose.material3.*
+import androidx.compose.runtime.*
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.input.ImeAction
+import androidx.compose.ui.text.input.KeyboardType
+import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.unit.dp
+import androidx.lifecycle.viewmodel.compose.viewModel
+import mx.edu.utng.arg.security01.models.AuthState
+import mx.edu.utng.arg.security01.ui.components.CustomTextField
+import mx.edu.utng.arg.security01.ui.components.ErrorDialog
+import mx.edu.utng.arg.security01.ui.components.LoadingButton
+import mx.edu.utng.arg.security01.viewmodel.AuthViewModel
+import mx.edu.utng.securidad.R
+
+/**
+ * Pantalla de Login con Jetpack Compose
+ *
+ * ESTRUCTURA DE UNA PANTALLA COMPOSE:
+ * 1. Estados locales (remember)
+ * 2. Observación de ViewModels
+ * 3. UI (interfaz visual)
+ * 4. Efectos secundarios (LaunchedEffect, SideEffect)
+ *
+ * ANALOGÍA PARA ESTUDIANTES:
+ * Imaginen que están montando una obra de teatro:
+ * - Estados = Los diálogos que van cambiando
+ * - ViewModel = El director que coordina todo
+ * - UI = El escenario y los actores
+ * - Efectos = Las luces y sonido que reaccionan a la acción
+ */
+@Composable
+fun LoginScreen(
+    viewModel: AuthViewModel = viewModel(),
+    onLoginSuccess: () -> Unit
+) {
+    // ============================================
+    // PASO 1: ESTADOS LOCALES
+    // ============================================
+    // Estados para los campos de texto
+    var email by remember { mutableStateOf("") }
+    var password by remember { mutableStateOf("") }
+
+    // Estados para validaciones
+    var emailError by remember { mutableStateOf<String?>(null) }
+    var passwordError by remember { mutableStateOf<String?>(null) }
+
+    // Estado para mostrar diálogo de error
+    var showErrorDialog by remember { mutableStateOf(false) }
+    var errorMessage by remember { mutableStateOf("") }
+
+    // ============================================
+    // PASO 2: OBSERVACIÓN DEL VIEWMODEL
+    // ============================================
+    val authState by viewModel.authState.collectAsState()
+
+    // ============================================
+    // PASO 3: EFECTOS SECUNDARIOS
+    // ============================================
+    /**
+     * LaunchedEffect observa cambios en authState
+     *
+     * EXPLICACIÓN: Es como un "vigilante" que está atento
+     * a cambios específicos y reacciona cuando ocurren.
+     */
+    LaunchedEffect(authState) {
+        when (authState) {
+            is AuthState.Success -> {
+                // Login exitoso - navegamos a la siguiente pantalla
+                onLoginSuccess()
+            }
+            is AuthState.Error -> {
+                // Mostramos el error
+                errorMessage = (authState as AuthState.Error).message
+                showErrorDialog = true
+                viewModel.resetAuthState()
+            }
+            else -> {
+                // Idle o Loading - no hacemos nada
+            }
+        }
+    }
+
+    // ============================================
+    // PASO 4: FUNCIÓN DE VALIDACIÓN
+    // ============================================
+    /**
+     * Valida los campos antes de enviar
+     *
+     * IMPORTANTE: Siempre validar en el cliente Y en el servidor
+     * Cliente: Para dar feedback inmediato al usuario
+     * Servidor: Por seguridad (nunca confiar solo en el cliente)
+     */
+    fun validateFields(): Boolean {
+        var isValid = true
+
+        // Validar email
+        when {
+            email.isBlank() -> {
+                emailError = "El email es obligatorio"
+                isValid = false
+            }
+            !android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches() -> {
+                emailError = "Formato de email inválido"
+                isValid = false
+            }
+            else -> emailError = null
+        }
+
+        // Validar password
+        when {
+            password.isBlank() -> {
+                passwordError = "La contraseña es obligatoria"
+                isValid = false
+            }
+            password.length < 6 -> {
+                passwordError = "Mínimo 6 caracteres"
+                isValid = false
+            }
+            else -> passwordError = null
+        }
+
+        return isValid
+    }
+
+    // ============================================
+    // PASO 5: FUNCIÓN DE LOGIN
+    // ============================================
+    fun performLogin() {
+        if (validateFields()) {
+            viewModel.login(email, password)
+        }
+    }
+
+    // ============================================
+    // PASO 6: UI - INTERFAZ VISUAL
+    // ============================================
+    Box(
+        modifier = Modifier
+            .fillMaxSize()
+            .padding(24.dp)
+    ) {
+        // Hacemos la columna scrolleable por si el teclado cubre contenido
+        Column(
+            modifier = Modifier
+                .fillMaxSize()
+                .verticalScroll(rememberScrollState()),
+            horizontalAlignment = Alignment.CenterHorizontally,
+            verticalArrangement = Arrangement.Center
+        ) {
+            // ============================================
+            // LOGO Y TÍTULOS
+            // ============================================
+            Image(
+                painter = painterResource(id = R.drawable.ic_launcher_foreground),
+                contentDescription = "Logo de la app",
+                modifier = Modifier.size(120.dp)
+            )
+
+            Spacer(modifier = Modifier.height(32.dp))
+
+            Text(
+                text = "Bienvenido",
+                style = MaterialTheme.typography.headlineLarge,
+                color = MaterialTheme.colorScheme.primary
+            )
+
+            Spacer(modifier = Modifier.height(8.dp))
+
+            Text(
+                text = "Inicia sesión para continuar",
+                style = MaterialTheme.typography.bodyLarge,
+                color = MaterialTheme.colorScheme.onSurfaceVariant,
+                textAlign = TextAlign.Center
+            )
+
+            Spacer(modifier = Modifier.height(48.dp))
+
+            // ============================================
+            // CAMPOS DE TEXTO
+            // ============================================
+            CustomTextField(
+                value = email,
+                onValueChange = {
+                    email = it
+                    emailError = null // Limpiamos el error al escribir
+                },
+                label = "Correo electrónico",
+                leadingIcon = Icons.Default.Email,
+                keyboardType = KeyboardType.Email,
+                imeAction = ImeAction.Next,
+                isError = emailError != null,
+                errorMessage = emailError,
+                enabled = authState !is AuthState.Loading
+            )
+
+            Spacer(modifier = Modifier.height(16.dp))
+
+            CustomTextField(
+                value = password,
+                onValueChange = {
+                    password = it
+                    passwordError = null
+                },
+                label = "Contraseña",
+                leadingIcon = Icons.Default.Lock,
+                isPassword = true,
+                keyboardType = KeyboardType.Password,
+                imeAction = ImeAction.Done,
+                onImeAction = { performLogin() },
+                isError = passwordError != null,
+                errorMessage = passwordError,
+                enabled = authState !is AuthState.Loading
+            )
+
+            Spacer(modifier = Modifier.height(32.dp))
+
+            // ============================================
+            // BOTÓN DE LOGIN
+            // ============================================
+            LoadingButton(
+                text = "Iniciar Sesión",
+                onClick = { performLogin() },
+                isLoading = authState is AuthState.Loading,
+                enabled = authState !is AuthState.Loading
+            )
+
+            Spacer(modifier = Modifier.height(16.dp))
+
+            // ============================================
+            // TEXTO DE AYUDA (opcional)
+            // ============================================
+            TextButton(
+                onClick = { /* TODO: Navegar a recuperar contraseña */ },
+                enabled = authState !is AuthState.Loading
+            ) {
+                Text(
+                    text = "¿Olvidaste tu contraseña?",
+                    style = MaterialTheme.typography.bodyMedium,
+                    color = MaterialTheme.colorScheme.primary
+                )
+            }
+
+            Spacer(modifier = Modifier.height(32.dp))
+
+            // ============================================
+            // VERSIÓN DE LA APP (Info adicional)
+            // ============================================
+            Text(
+                text = "Versión 1.0.0",
+                style = MaterialTheme.typography.bodySmall,
+                color = MaterialTheme.colorScheme.onSurfaceVariant
+            )
+        }
+
+        // ============================================
+        // DIÁLOGO DE ERROR
+        // ============================================
+        if (showErrorDialog) {
+            ErrorDialog(
+                title = "Error de autenticación",
+                message = errorMessage,
+                onDismiss = { showErrorDialog = false }
+            )
+        }
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/screens/SplashScreen.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/SplashScreen.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/SplashScreen.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/screens/SplashScreen.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,112 @@
+package mx.edu.utng.arg.security01.ui.screens
+
+import androidx.compose.animation.core.*
+import androidx.compose.foundation.Image
+import androidx.compose.foundation.background
+import androidx.compose.foundation.layout.*
+import androidx.compose.material3.CircularProgressIndicator
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.Text
+import androidx.compose.runtime.*
+import androidx.compose.ui.Alignment
+import androidx.compose.ui.Modifier
+import androidx.compose.ui.draw.scale
+import androidx.compose.ui.res.painterResource
+import androidx.compose.ui.text.style.TextAlign
+import androidx.compose.ui.unit.dp
+import androidx.lifecycle.viewmodel.compose.viewModel
+import kotlinx.coroutines.delay
+import mx.edu.utng.arg.security01.viewmodel.AuthViewModel
+import mx.edu.utng.securidad.R
+
+/**
+ * Pantalla de Splash (Carga inicial)
+ *
+ * PROPÓSITO DE LA SPLASH SCREEN:
+ * 1. Verificar si hay sesión activa
+ * 2. Mostrar branding de la app
+ * 3. Dar tiempo para inicializar componentes
+ *
+ * ANALOGÍA: Es como la portada de un libro. Te muestra qué esperar
+ * mientras el libro (app) se prepara para abrirse completamente.
+ */
+@Composable
+fun SplashScreen(
+    viewModel: AuthViewModel = viewModel(),
+    onNavigateToLogin: () -> Unit,
+    onNavigateToHome: () -> Unit
+) {
+    // ============================================
+    // ANIMACIÓN DEL LOGO
+    // ============================================
+    val scale = remember { Animatable(0f) }
+
+    // Verificamos si hay sesión
+    val isLoggedIn = viewModel.isLoggedIn()
+
+    LaunchedEffect(key1 = true) {
+        // Animación de entrada del logo
+        scale.animateTo(
+            targetValue = 1f,
+            animationSpec = tween(
+                durationMillis = 800,
+                easing = FastOutSlowInEasing
+            )
+        )
+
+        // Esperamos 2 segundos
+        delay(2000)
+
+        // Navegamos según si hay sesión o no
+        if (isLoggedIn) {
+            // Validamos el token antes de ir a Home
+            viewModel.validateToken()
+            delay(500) // Damos tiempo a la validación
+            onNavigateToHome()
+        } else {
+            onNavigateToLogin()
+        }
+    }
+
+    // ============================================
+    // UI DEL SPLASH
+    // ============================================
+    Box(
+        modifier = Modifier
+            .fillMaxSize()
+            .background(MaterialTheme.colorScheme.primary),
+        contentAlignment = Alignment.Center
+    ) {
+        Column(
+            horizontalAlignment = Alignment.CenterHorizontally,
+            verticalArrangement = Arrangement.Center
+        ) {
+            // Logo con animación
+            Image(
+                painter = painterResource(id = R.drawable.ic_launcher_foreground),
+                contentDescription = "Logo",
+                modifier = Modifier
+                    .size(150.dp)
+                    .scale(scale.value)
+            )
+
+            Spacer(modifier = Modifier.height(32.dp))
+
+            // Nombre de la app
+            Text(
+                text = "Security App",
+                style = MaterialTheme.typography.headlineMedium,
+                color = MaterialTheme.colorScheme.onPrimary,
+                textAlign = TextAlign.Center
+            )
+
+            Spacer(modifier = Modifier.height(48.dp))
+
+            // Indicador de carga
+            CircularProgressIndicator(
+                color = MaterialTheme.colorScheme.onPrimary,
+                strokeWidth = 3.dp
+            )
+        }
+    }
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Color.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Color.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Color.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Color.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,37 @@
+package mx.edu.utng.arg.security01.ui.theme
+
+import androidx.compose.ui.graphics.Color
+
+
+// Colores principales
+val Primary = Color(0xFF6200EE)
+val PrimaryVariant = Color(0xFF3700B3)
+val Secondary = Color(0xFF03DAC6)
+val SecondaryVariant = Color(0xFF018786)
+
+// Colores de fondo
+val Background = Color(0xFFF5F5F5)
+val Surface = Color(0xFFFFFFFF)
+
+// Colores de texto
+val OnPrimary = Color.White
+val OnSecondary = Color.Black
+val OnBackground = Color(0xFF1C1C1C)
+val OnSurface = Color(0xFF1C1C1C)
+
+// Colores de estado
+val Error = Color(0xFFB00020)
+val Success = Color(0xFF4CAF50)
+val Warning = Color(0xFFFF9800)
+
+// Colores personalizados
+val TextFieldBackground = Color(0xFFF8F8F8)
+val Divider = Color(0xFFE0E0E0)
+
+val Purple80 = Color(0xFFD0BCFF)
+val PurpleGrey80 = Color(0xFFCCC2DC)
+val Pink80 = Color(0xFFEFB8C8)
+
+val Purple40 = Color(0xFF6650a4)
+val PurpleGrey40 = Color(0xFF625b71)
+val Pink40 = Color(0xFF7D5260)
\ No newline at end of file
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Theme.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Theme.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Theme.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Theme.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,85 @@
+package mx.edu.utng.arg.security01.ui.theme
+
+import android.app.Activity
+import androidx.compose.foundation.isSystemInDarkTheme
+import androidx.compose.material3.MaterialTheme
+import androidx.compose.material3.darkColorScheme
+import androidx.compose.material3.lightColorScheme
+import androidx.compose.runtime.Composable
+import androidx.compose.runtime.SideEffect
+import androidx.compose.ui.graphics.Color
+import androidx.compose.ui.graphics.toArgb
+import androidx.compose.ui.platform.LocalView
+import androidx.core.view.WindowCompat
+
+/**
+ * Esquema de colores para tema oscuro
+ */
+private val DarkColorScheme = darkColorScheme(
+    primary = Primary,
+    primaryContainer = PrimaryVariant,
+    secondary = Secondary,
+    secondaryContainer = SecondaryVariant,
+    background = Color(0xFF121212),
+    surface = Color(0xFF1E1E1E),
+    error = Error,
+    onPrimary = OnPrimary,
+    onSecondary = OnSecondary,
+    onBackground = Color.White,
+    onSurface = Color.White,
+)
+
+/**
+ * Esquema de colores para tema claro
+ */
+private val LightColorScheme = lightColorScheme(
+    primary = Primary,
+    primaryContainer = PrimaryVariant,
+    secondary = Secondary,
+    secondaryContainer = SecondaryVariant,
+    background = Background,
+    surface = Surface,
+    error = Error,
+    onPrimary = OnPrimary,
+    onSecondary = OnSecondary,
+    onBackground = OnBackground,
+    onSurface = OnSurface,
+)
+
+/**
+ * Tema principal de la aplicación
+ *
+ * Explicación:
+ * El tema es como la "paleta de colores" de un pintor.
+ * Define todos los colores, fuentes y estilos que usaremos.
+ *
+ * @param darkTheme Si es true, usa colores oscuros
+ * @param dynamicColor Si es true, usa colores del sistema (Android 12+)
+ * @param content El contenido de la app que usará este tema
+ */
+@Composable
+fun Security01Theme(
+    darkTheme: Boolean = isSystemInDarkTheme(),
+    dynamicColor: Boolean = false,
+    content: @Composable () -> Unit
+) {
+    val colorScheme = when {
+        darkTheme -> DarkColorScheme
+        else -> LightColorScheme
+    }
+
+    val view = LocalView.current
+    if (!view.isInEditMode) {
+        SideEffect {
+            val window = (view.context as Activity).window
+            window.statusBarColor = colorScheme.primary.toArgb()
+            WindowCompat.getInsetsController(window, view).isAppearanceLightStatusBars = !darkTheme
+        }
+    }
+
+    MaterialTheme(
+        colorScheme = colorScheme,
+        typography = Typography,
+        content = content
+    )
+}
Index: app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Type.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Type.kt b/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Type.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/ui/theme/Type.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,130 @@
+package mx.edu.utng.arg.security01.ui.theme
+
+import androidx.compose.material3.Typography
+import androidx.compose.ui.text.TextStyle
+import androidx.compose.ui.text.font.FontFamily
+import androidx.compose.ui.text.font.FontWeight
+import androidx.compose.ui.unit.sp
+
+/**
+ * Tipografía de la aplicación
+ *
+ * Explicación:
+ * Typography es como definir los "estilos de letra" de toda la app.
+ * Similar a definir Título 1, Título 2, etc. en Word.
+ */
+val Typography = Typography(
+    // Títulos grandes
+    displayLarge = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Bold,
+        fontSize = 57.sp,
+        lineHeight = 64.sp,
+        letterSpacing = 0.sp
+    ),
+    displayMedium = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Bold,
+        fontSize = 45.sp,
+        lineHeight = 52.sp,
+        letterSpacing = 0.sp
+    ),
+    displaySmall = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Bold,
+        fontSize = 36.sp,
+        lineHeight = 44.sp,
+        letterSpacing = 0.sp
+    ),
+    // Headlines
+    headlineLarge = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Bold,
+        fontSize = 32.sp,
+        lineHeight = 40.sp,
+        letterSpacing = 0.sp
+    ),
+    headlineMedium = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Bold,
+        fontSize = 28.sp,
+        lineHeight = 36.sp,
+        letterSpacing = 0.sp
+    ),
+    headlineSmall = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Bold,
+        fontSize = 24.sp,
+        lineHeight = 32.sp,
+        letterSpacing = 0.sp
+    ),
+
+    // Títulos
+    titleLarge = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Bold,
+        fontSize = 22.sp,
+        lineHeight = 28.sp,
+        letterSpacing = 0.sp
+    ),
+    titleMedium = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.SemiBold,
+        fontSize = 16.sp,
+        lineHeight = 24.sp,
+        letterSpacing = 0.15.sp
+    ),
+    titleSmall = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Medium,
+        fontSize = 14.sp,
+        lineHeight = 20.sp,
+        letterSpacing = 0.1.sp
+    ),
+
+    // Texto del cuerpo
+    bodyLarge = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Normal,
+        fontSize = 16.sp,
+        lineHeight = 24.sp,
+        letterSpacing = 0.5.sp
+    ),
+    bodyMedium = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Normal,
+        fontSize = 14.sp,
+        lineHeight = 20.sp,
+        letterSpacing = 0.25.sp
+    ),
+    bodySmall = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Normal,
+        fontSize = 12.sp,
+        lineHeight = 16.sp,
+        letterSpacing = 0.4.sp
+    ),
+
+    // Labels
+    labelLarge = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Medium,
+        fontSize = 14.sp,
+        lineHeight = 20.sp,
+        letterSpacing = 0.1.sp
+    ),
+    labelMedium = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Medium,
+        fontSize = 12.sp,
+        lineHeight = 16.sp,
+        letterSpacing = 0.5.sp
+    ),
+    labelSmall = TextStyle(
+        fontFamily = FontFamily.Default,
+        fontWeight = FontWeight.Medium,
+        fontSize = 11.sp,
+        lineHeight = 16.sp,
+        letterSpacing = 0.5.sp
+    )
+)
Index: app/src/main/java/mx/edu/utng/arg/security01/viewmodel/AuthViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/mx/edu/utng/arg/security01/viewmodel/AuthViewModel.kt b/app/src/main/java/mx/edu/utng/arg/security01/viewmodel/AuthViewModel.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/java/mx/edu/utng/arg/security01/viewmodel/AuthViewModel.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,150 @@
+package mx.edu.utng.arg.security01.viewmodel
+
+import android.app.Application
+import androidx.lifecycle.AndroidViewModel
+import androidx.lifecycle.viewModelScope
+import kotlinx.coroutines.flow.MutableStateFlow
+import kotlinx.coroutines.flow.StateFlow
+import kotlinx.coroutines.flow.asStateFlow
+import kotlinx.coroutines.launch
+import mx.edu.utng.arg.security01.models.AuthState
+import mx.edu.utng.arg.security01.models.User
+import mx.edu.utng.arg.security01.repository.AuthRepository
+
+/**
+ * ViewModel para gestionar la autenticación
+ *
+ * ANALOGÍA DEL VIEWMODEL:
+ * Imaginen que están en un restaurante. Ustedes (Activity) no van
+ * a la cocina a preparar su comida. Le dicen al mesero (ViewModel)
+ * qué quieren, y el mesero se comunica con la cocina (Repository).
+ *
+ * El ViewModel sobrevive a cambios de configuración (rotación de pantalla)
+ * mientras que las Activities se destruyen y recrean.
+ */
+class AuthViewModel(application: Application) : AndroidViewModel(application) {
+
+    private val repository = AuthRepository(application)
+
+    // LiveData para observar cambios en el estado de autenticación
+    private val _authState = MutableStateFlow<AuthState>(AuthState.Idle)
+    val authState: StateFlow<AuthState> = _authState.asStateFlow()
+
+    // LiveData para el usuario actual
+    private val _currentUser = MutableStateFlow<User?>(null)
+    val currentUser: StateFlow<User?> = _currentUser.asStateFlow()
+
+    /**
+     * Inicializamos el ViewModel verificando si hay sesión activa
+     */
+    init {
+        checkExistingSession()
+    }
+
+    /**
+     * Verifica si existe una sesión guardada al iniciar la app
+     */
+    private fun checkExistingSession() {
+        viewModelScope.launch {
+            if (repository.isLoggedIn()) {
+                val user = repository.getCurrentUser()
+                if (user != null) {
+                    _currentUser.value = user
+                    _authState.value = AuthState.Success(user)
+
+                    // Validamos el token con el servidor
+                    validateToken()
+                }
+            }
+        }
+    }
+
+    /**
+     * Inicia sesión con email y contraseña
+     *
+     * @param email Correo electrónico del usuario
+     * @param password Contraseña del usuario
+     */
+    fun login(email: String, password: String) {
+        // Cambiamos el estado a Loading
+        _authState.value = AuthState.Loading
+
+        viewModelScope.launch {
+            // Llamamos al repositorio de forma asíncrona
+            val result = repository.login(email, password)
+
+            // Procesamos el resultado
+            result.onSuccess { user ->
+                _currentUser.value = user
+                _authState.value = AuthState.Success(user)
+            }.onFailure { exception ->
+                _authState.value = AuthState.Error(
+                    exception.message ?: "Error desconocido en el login"
+                )
+            }
+        }
+    }
+
+    /**
+     * Valida el token actual con el servidor
+     * Útil para verificar si la sesión sigue válida
+     */
+    fun validateToken() {
+        viewModelScope.launch {
+            val result = repository.validateToken()
+
+            result.onSuccess { isValid ->
+                if (!isValid) {
+                    // Token inválido o expirado
+                    logout()
+                }
+            }.onFailure {
+                // Error al validar, pero mantenemos sesión local
+                // El usuario podrá seguir usando la app offline
+            }
+        }
+    }
+
+    /**
+     * Cierra la sesión del usuario
+     */
+    fun logout() {
+        _authState.value = AuthState.Loading
+
+        viewModelScope.launch {
+            val result = repository.logout()
+
+            result.onSuccess {
+                _currentUser.value = null
+                _authState.value = AuthState.Logout
+            }.onFailure { exception ->
+                // Aunque falle, forzamos el logout local
+                _currentUser.value = null
+                _authState.value = AuthState.Logout
+            }
+        }
+    }
+
+    /**
+     * Reinicia el estado a Idle
+     * Útil después de mostrar un error o éxito
+     */
+    fun resetAuthState() {
+        _authState.value = AuthState.Idle
+    }
+
+    /**
+     * Actualiza la actividad del usuario
+     * Llamar cuando el usuario interactúe con la app
+     */
+    fun updateUserActivity() {
+        repository.updateActivity()
+    }
+
+    /**
+     * Verifica si hay sesión activa
+     */
+    fun isLoggedIn(): Boolean {
+        return repository.isLoggedIn()
+    }
+}
Index: app/src/main/res/drawable/ic_launcher_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_background.xml b/app/src/main/res/drawable/ic_launcher_background.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/drawable/ic_launcher_background.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,170 @@
+<?xml version="1.0" encoding="utf-8"?>
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path
+        android:fillColor="#3DDC84"
+        android:pathData="M0,0h108v108h-108z" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M9,0L9,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,0L19,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,0L29,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,0L39,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,0L49,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,0L59,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,0L69,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,0L79,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M89,0L89,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M99,0L99,108"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,9L108,9"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,19L108,19"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,29L108,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,39L108,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,49L108,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,59L108,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,69L108,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,79L108,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,89L108,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M0,99L108,99"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,29L89,29"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,39L89,39"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,49L89,49"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,59L89,59"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,69L89,69"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M19,79L89,79"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M29,19L29,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M39,19L39,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M49,19L49,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M59,19L59,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M69,19L69,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+    <path
+        android:fillColor="#00000000"
+        android:pathData="M79,19L79,89"
+        android:strokeWidth="0.8"
+        android:strokeColor="#33FFFFFF" />
+</vector>
Index: app/src/main/res/drawable/ic_launcher_foreground.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_foreground.xml b/app/src/main/res/drawable/ic_launcher_foreground.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/drawable/ic_launcher_foreground.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,30 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:aapt="http://schemas.android.com/aapt"
+    android:width="108dp"
+    android:height="108dp"
+    android:viewportWidth="108"
+    android:viewportHeight="108">
+    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
+        <aapt:attr name="android:fillColor">
+            <gradient
+                android:endX="85.84757"
+                android:endY="92.4963"
+                android:startX="42.9492"
+                android:startY="49.59793"
+                android:type="linear">
+                <item
+                    android:color="#44000000"
+                    android:offset="0.0" />
+                <item
+                    android:color="#00000000"
+                    android:offset="1.0" />
+            </gradient>
+        </aapt:attr>
+    </path>
+    <path
+        android:fillColor="#FFFFFF"
+        android:fillType="nonZero"
+        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
+        android:strokeWidth="1"
+        android:strokeColor="#00000000" />
+</vector>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
+    <background android:drawable="@drawable/ic_launcher_background" />
+    <foreground android:drawable="@drawable/ic_launcher_foreground" />
+    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
+</adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/values/colors.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="purple_200">#FFBB86FC</color>
+    <color name="purple_500">#FF6200EE</color>
+    <color name="purple_700">#FF3700B3</color>
+    <color name="teal_200">#FF03DAC5</color>
+    <color name="teal_700">#FF018786</color>
+    <color name="black">#FF000000</color>
+    <color name="white">#FFFFFFFF</color>
+    <color name="gray">#FF757575</color>
+</resources>
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/values/strings.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,29 @@
+
+<resources>
+    <string name="app_name">Security01</string>
+
+    <!-- Login Screen -->
+    <string name="login_title">Bienvenido</string>
+    <string name="login_subtitle">Inicia sesión para continuar</string>
+    <string name="email_hint">Correo electrónico</string>
+    <string name="password_hint">Contraseña</string>
+    <string name="login_button">Iniciar Sesión</string>
+    <string name="forgot_password">¿Olvidaste tu contraseña?</string>
+
+    <!-- Home Screen -->
+    <string name="home_title">Mi Perfil</string>
+    <string name="logout">Cerrar Sesión</string>
+    <string name="logout_confirmation">¿Estás seguro de que deseas cerrar sesión?</string>
+    <string name="cancel">Cancelar</string>
+
+    <!-- Errors -->
+    <string name="error_empty_email">El email es obligatorio</string>
+    <string name="error_invalid_email">Formato de email inválido</string>
+    <string name="error_empty_password">La contraseña es obligatoria</string>
+    <string name="error_short_password">La contraseña debe tener al menos 6 caracteres</string>
+    <string name="error_connection">Error de conexión</string>
+    <string name="error_unknown">Error desconocido</string>
+
+    <!-- Content Descriptions -->
+    <string name="app_logo">Logo de la aplicación</string>
+</resources>
Index: app/src/main/res/values/themes.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/values/themes.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+
+    <style name="Theme.Security01" parent="android:Theme.Material.Light.NoActionBar" />
+</resources>
\ No newline at end of file
Index: app/src/main/res/xml/backup_rules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/backup_rules.xml b/app/src/main/res/xml/backup_rules.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/xml/backup_rules.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+   Sample backup rules file; uncomment and customize as necessary.
+   See https://developer.android.com/guide/topics/data/autobackup
+   for details.
+   Note: This file is ignored for devices older than API 31
+   See https://developer.android.com/about/versions/12/backup-restore
+-->
+<full-backup-content>
+    <!--
+   <include domain="sharedpref" path="."/>
+   <exclude domain="sharedpref" path="device.xml"/>
+-->
+</full-backup-content>
\ No newline at end of file
Index: app/src/main/res/xml/data_extraction_rules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/data_extraction_rules.xml b/app/src/main/res/xml/data_extraction_rules.xml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/main/res/xml/data_extraction_rules.xml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+   Sample data extraction rules file; uncomment and customize as necessary.
+   See https://developer.android.com/about/versions/12/backup-restore#xml-changes
+   for details.
+-->
+<data-extraction-rules>
+    <cloud-backup>
+        <!-- TODO: Use <include> and <exclude> to control what is backed up.
+        <include .../>
+        <exclude .../>
+        -->
+    </cloud-backup>
+    <!--
+    <device-transfer>
+        <include .../>
+        <exclude .../>
+    </device-transfer>
+    -->
+</data-extraction-rules>
\ No newline at end of file
Index: app/src/test/java/mx/edu/utng/arg/security01/ExampleUnitTest.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/test/java/mx/edu/utng/arg/security01/ExampleUnitTest.kt b/app/src/test/java/mx/edu/utng/arg/security01/ExampleUnitTest.kt
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/app/src/test/java/mx/edu/utng/arg/security01/ExampleUnitTest.kt	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,17 @@
+package mx.edu.utng.arg.security01
+
+import org.junit.Test
+
+import org.junit.Assert.*
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * See [testing documentation](http://d.android.com/tools/testing).
+ */
+class ExampleUnitTest {
+    @Test
+    fun addition_isCorrect() {
+        assertEquals(4, 2 + 2)
+    }
+}
\ No newline at end of file
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/build.gradle.kts	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,6 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+plugins {
+    alias(libs.plugins.android.application) apply false
+    alias(libs.plugins.kotlin.android) apply false
+    alias(libs.plugins.kotlin.compose) apply false
+}
\ No newline at end of file
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle.properties b/gradle.properties
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/gradle.properties	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,23 @@
+# Project-wide Gradle settings.
+# IDE (e.g. Android Studio) users:
+# Gradle settings configured through the IDE *will override*
+# any settings specified in this file.
+# For more details on how to configure your build environment visit
+# http://www.gradle.org/docs/current/userguide/build_environment.html
+# Specifies the JVM arguments used for the daemon process.
+# The setting is particularly useful for tweaking memory settings.
+org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
+# When configured, Gradle will run in incubating parallel mode.
+# This option should only be used with decoupled projects. For more details, visit
+# https://developer.android.com/r/tools/gradle-multi-project-decoupled-projects
+# org.gradle.parallel=true
+# AndroidX package structure to make it clearer which packages are bundled with the
+# Android operating system, and which are packaged with your app's APK
+# https://developer.android.com/topic/libraries/support-library/androidx-rn
+android.useAndroidX=true
+# Kotlin code style for this project: "official" or "obsolete":
+kotlin.code.style=official
+# Enables namespacing of each library's R class so that its R class includes only the
+# resources declared in the library itself and none from the library's dependencies,
+# thereby reducing the size of the R class for that library
+android.nonTransitiveRClass=true
\ No newline at end of file
Index: gradle/libs.versions.toml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradle/libs.versions.toml b/gradle/libs.versions.toml
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/gradle/libs.versions.toml	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,37 @@
+[versions]
+agp = "8.13.0"
+kotlin = "2.0.0"
+coreKtx = "1.17.0"
+junit = "4.13.2"
+junitVersion = "1.3.0"
+espressoCore = "3.7.0"
+lifecycleRuntimeKtx = "2.9.4"
+activityCompose = "1.11.0"
+composeBom = "2024.09.00"
+uiGraphics = "1.9.4"
+coreSplashscreen = "1.0.1"
+
+[libraries]
+androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
+junit = { group = "junit", name = "junit", version.ref = "junit" }
+androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
+androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
+androidx-lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycleRuntimeKtx" }
+androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
+androidx-compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "composeBom" }
+androidx-compose-ui = { group = "androidx.compose.ui", name = "ui" }
+androidx-compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
+androidx-compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
+androidx-compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
+androidx-compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
+androidx-compose-ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
+androidx-compose-material3 = { group = "androidx.compose.material3", name = "material3" }
+androidx-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics", version.ref = "uiGraphics" }
+androidx-core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "coreSplashscreen" }
+
+[plugins]
+android-application = { id = "com.android.application", version.ref = "agp" }
+kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
+kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
+org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
+compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/gradle/wrapper/gradle-wrapper.properties	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,8 @@
+#Thu Oct 23 19:46:40 CST 2025
+distributionBase=GRADLE_USER_HOME
+distributionPath=wrapper/dists
+distributionUrl=https\://services.gradle.org/distributions/gradle-8.13-bin.zip
+networkTimeout=10000
+validateDistributionUrl=true
+zipStoreBase=GRADLE_USER_HOME
+zipStorePath=wrapper/dists
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew b/gradlew
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/gradlew	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,251 @@
+#!/bin/sh
+
+#
+# Copyright © 2015 the original authors.
+#
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#      https://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+#
+# SPDX-License-Identifier: Apache-2.0
+#
+
+##############################################################################
+#
+#   Gradle start up script for POSIX generated by Gradle.
+#
+#   Important for running:
+#
+#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is
+#       noncompliant, but you have some other compliant shell such as ksh or
+#       bash, then to run this script, type that shell name before the whole
+#       command line, like:
+#
+#           ksh Gradle
+#
+#       Busybox and similar reduced shells will NOT work, because this script
+#       requires all of these POSIX shell features:
+#         * functions;
+#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,
+#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;
+#         * compound commands having a testable exit status, especially «case»;
+#         * various built-in commands including «command», «set», and «ulimit».
+#
+#   Important for patching:
+#
+#   (2) This script targets any POSIX shell, so it avoids extensions provided
+#       by Bash, Ksh, etc; in particular arrays are avoided.
+#
+#       The "traditional" practice of packing multiple parameters into a
+#       space-separated string is a well documented source of bugs and security
+#       problems, so this is (mostly) avoided, by progressively accumulating
+#       options in "$@", and eventually passing that to Java.
+#
+#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,
+#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;
+#       see the in-line comments for details.
+#
+#       There are tweaks for specific operating systems such as AIX, CygWin,
+#       Darwin, MinGW, and NonStop.
+#
+#   (3) This script is generated from the Groovy template
+#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt
+#       within the Gradle project.
+#
+#       You can find Gradle at https://github.com/gradle/gradle/.
+#
+##############################################################################
+
+# Attempt to set APP_HOME
+
+# Resolve links: $0 may be a link
+app_path=$0
+
+# Need this for daisy-chained symlinks.
+while
+    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
+    [ -h "$app_path" ]
+do
+    ls=$( ls -ld "$app_path" )
+    link=${ls#*' -> '}
+    case $link in             #(
+      /*)   app_path=$link ;; #(
+      *)    app_path=$APP_HOME$link ;;
+    esac
+done
+
+# This is normally unused
+# shellcheck disable=SC2034
+APP_BASE_NAME=${0##*/}
+# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)
+APP_HOME=$( cd -P "${APP_HOME:-./}" > /dev/null && printf '%s\n' "$PWD" ) || exit
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD=maximum
+
+warn () {
+    echo "$*"
+} >&2
+
+die () {
+    echo
+    echo "$*"
+    echo
+    exit 1
+} >&2
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+nonstop=false
+case "$( uname )" in                #(
+  CYGWIN* )         cygwin=true  ;; #(
+  Darwin* )         darwin=true  ;; #(
+  MSYS* | MINGW* )  msys=true    ;; #(
+  NONSTOP* )        nonstop=true ;;
+esac
+
+CLASSPATH="\\\"\\\""
+
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD=$JAVA_HOME/jre/sh/java
+    else
+        JAVACMD=$JAVA_HOME/bin/java
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD=java
+    if ! command -v java >/dev/null 2>&1
+    then
+        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+fi
+
+# Increase the maximum file descriptors if we can.
+if ! "$cygwin" && ! "$darwin" && ! "$nonstop" ; then
+    case $MAX_FD in #(
+      max*)
+        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.
+        # shellcheck disable=SC2039,SC3045
+        MAX_FD=$( ulimit -H -n ) ||
+            warn "Could not query maximum file descriptor limit"
+    esac
+    case $MAX_FD in  #(
+      '' | soft) :;; #(
+      *)
+        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.
+        # shellcheck disable=SC2039,SC3045
+        ulimit -n "$MAX_FD" ||
+            warn "Could not set maximum file descriptor limit to $MAX_FD"
+    esac
+fi
+
+# Collect all arguments for the java command, stacking in reverse order:
+#   * args from the command line
+#   * the main class name
+#   * -classpath
+#   * -D...appname settings
+#   * --module-path (only if needed)
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.
+
+# For Cygwin or MSYS, switch paths to Windows format before running java
+if "$cygwin" || "$msys" ; then
+    APP_HOME=$( cygpath --path --mixed "$APP_HOME" )
+    CLASSPATH=$( cygpath --path --mixed "$CLASSPATH" )
+
+    JAVACMD=$( cygpath --unix "$JAVACMD" )
+
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    for arg do
+        if
+            case $arg in                                #(
+              -*)   false ;;                            # don't mess with options #(
+              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath
+                    [ -e "$t" ] ;;                      #(
+              *)    false ;;
+            esac
+        then
+            arg=$( cygpath --path --ignore --mixed "$arg" )
+        fi
+        # Roll the args list around exactly as many times as the number of
+        # args, so each arg winds up back in the position where it started, but
+        # possibly modified.
+        #
+        # NB: a `for` loop captures its iteration list before it begins, so
+        # changing the positional parameters here affects neither the number of
+        # iterations, nor the values presented in `arg`.
+        shift                   # remove old arg
+        set -- "$@" "$arg"      # push replacement arg
+    done
+fi
+
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS='"-Xmx64m" "-Xms64m"'
+
+# Collect all arguments for the java command:
+#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,
+#     and any embedded shellness will be escaped.
+#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be
+#     treated as '${Hostname}' itself on the command line.
+
+set -- \
+        "-Dorg.gradle.appname=$APP_BASE_NAME" \
+        -classpath "$CLASSPATH" \
+        -jar "$APP_HOME/gradle/wrapper/gradle-wrapper.jar" \
+        "$@"
+
+# Stop when "xargs" is not available.
+if ! command -v xargs >/dev/null 2>&1
+then
+    die "xargs is not available"
+fi
+
+# Use "xargs" to parse quoted args.
+#
+# With -n1 it outputs one arg per line, with the quotes and backslashes removed.
+#
+# In Bash we could simply go:
+#
+#   readarray ARGS < <( xargs -n1 <<<"$var" ) &&
+#   set -- "${ARGS[@]}" "$@"
+#
+# but POSIX shell has neither arrays nor command substitution, so instead we
+# post-process each arg (as a line of input to sed) to backslash-escape any
+# character that might be a shell metacharacter, then use eval to reverse
+# that process (while maintaining the separation between arguments), and wrap
+# the whole thing up as a single "set" statement.
+#
+# This will of course break if any of these variables contains a newline or
+# an unmatched quote.
+#
+
+eval "set -- $(
+        printf '%s\n' "$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS" |
+        xargs -n1 |
+        sed ' s~[^-[:alnum:]+,./:=@_]~\\&~g; ' |
+        tr '\n' ' '
+    )" '"$@"'
+
+exec "$JAVACMD" "$@"
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gradlew.bat b/gradlew.bat
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/gradlew.bat	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,94 @@
+@rem
+@rem Copyright 2015 the original author or authors.
+@rem
+@rem Licensed under the Apache License, Version 2.0 (the "License");
+@rem you may not use this file except in compliance with the License.
+@rem You may obtain a copy of the License at
+@rem
+@rem      https://www.apache.org/licenses/LICENSE-2.0
+@rem
+@rem Unless required by applicable law or agreed to in writing, software
+@rem distributed under the License is distributed on an "AS IS" BASIS,
+@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+@rem See the License for the specific language governing permissions and
+@rem limitations under the License.
+@rem
+@rem SPDX-License-Identifier: Apache-2.0
+@rem
+
+@if "%DEBUG%"=="" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+set DIRNAME=%~dp0
+if "%DIRNAME%"=="" set DIRNAME=.
+@rem This is normally unused
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Resolve any "." and ".." in APP_HOME to make it shorter.
+for %%i in ("%APP_HOME%") do set APP_HOME=%%~fi
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS="-Xmx64m" "-Xms64m"
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if %ERRORLEVEL% equ 0 goto execute
+
+echo. 1>&2
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2
+echo. 1>&2
+echo Please set the JAVA_HOME variable in your environment to match the 1>&2
+echo location of your Java installation. 1>&2
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto execute
+
+echo. 1>&2
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2
+echo. 1>&2
+echo Please set the JAVA_HOME variable in your environment to match the 1>&2
+echo location of your Java installation. 1>&2
+
+goto fail
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=
+
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" -jar "%APP_HOME%\gradle\wrapper\gradle-wrapper.jar" %*
+
+:end
+@rem End local scope for the variables with windows NT shell
+if %ERRORLEVEL% equ 0 goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+set EXIT_CODE=%ERRORLEVEL%
+if %EXIT_CODE% equ 0 set EXIT_CODE=1
+if not ""=="%GRADLE_EXIT_CONSOLE%" exit %EXIT_CODE%
+exit /b %EXIT_CODE%
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle.kts b/settings.gradle.kts
new file mode 100644
--- /dev/null	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
+++ b/settings.gradle.kts	(revision 940971d37bccbefa998451e4a026239eb30e4a15)
@@ -0,0 +1,24 @@
+pluginManagement {
+    repositories {
+        google {
+            content {
+                includeGroupByRegex("com\\.android.*")
+                includeGroupByRegex("com\\.google.*")
+                includeGroupByRegex("androidx.*")
+            }
+        }
+        mavenCentral()
+        gradlePluginPortal()
+    }
+}
+dependencyResolutionManagement {
+    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
+    repositories {
+        google()
+        mavenCentral()
+    }
+}
+
+rootProject.name = "security01"
+include(":app")
+ 
\ No newline at end of file
diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher.webp b/app/src/main/res/mipmap-hdpi/ic_launcher.webp
new file mode 100644
index 0000000000000000000000000000000000000000..c209e78ecd372343283f4157dcfd918ec5165bb3
GIT binary patch
literal 1404
zc$@)z1%vuhNk&F=1pok7MM6+kP&il$0000G0000-002h-06|PpNX!5L00Dqw+t%{r
zzW2vH!KF=w&cMnnN@{whkTw+#mAh0SV?YL=)3MimFYCWp#fpdtz~8$hD5VPuQgtcN
zXl<@<#Cm<R)d19?=)E<{+g@mp0C)CAX%7ksNnpX=jPlJEkqD9%o*fC(U7iySOYHHS
zCLH@bXPyI|^Z)Mc^PG7Oc+NfBJO`d7p5;U`M53Wbd!w|M(MUoNRc2m{@^!wFKzL?&
zx_RAc-^9Azxo%DmXW^9GV0~;n_G9&dym)|QrMEx!y_F=oDunn;1y)cvAc6z{0MHiz
zodGIH07w8nF%*bGq9Gv`YHnm80|d1T$uW=u4vGV%tX#>e5f5yr2h%@8TWh?)bSK`O
z^Z@d={gn7J{iyxL_y_%J|L>ep{dUxUP8a{byupH&!UNR*OutO~0{*T4q5R6@ApLF!
z5{w?Z150gC7#>(VHFJZ-^6O@PYp{t!<r*4*+?g*sysFgiN}}d!-T(>jH(_Z*nzTK4
zkc{fLE4Q3|mA2`CWQ3{8;gxGizgM!zccbdQoOLZc8hThi-IhN90RFT|zlxh3Ty&VG
z?Fe{#<RA5Hg_mG&BZS>9RrRnxzsu|Lg2ddugg7k%>0JeD+{XZ7>Z~{=|M+sh1MF7~
zz>To~`~LVQe1nNoR-gEzkpe{Ak^7{{ZBk2i_<+`Bq<^GB!RYG+z)h;Y3+<{zlMUYd
zrd*W4w&jZ0%kBuDZ1EW&KLpyR7r2=}fF2%0VwHM4pUs}ZI2egi#DRMYZPek*^H9YK
zay4Iy3WXFG(F14xYsoDA|KXgGc5%2DhmQ1gFCkrgHBm!lXG<W<SKpuS2eaDGkL-J-
z!+&UV_N0e<DV*|igwqdC*l{lj0T&&`uq=ycU@f9x0i8jzLa(y*X(YV?PCtUw;ks}p
z4zFn7N(-OG^(9ot1ZhYISOWe9?+l%f6v41n+j<OM$_uJgNP?ZJy}hEMMH=;WiG4I`
zs(bIWwSD<LJnAN(E(Xjr4k(^UYF37F_3f{;E%%FEa&I3I0GbdH@{pD5$m+1PN5CW)
zyZ&*9o#8wstdx@^rci;0B4BP2+H4Y<KbJI5L(bXG(k@`Kp=d>8I5h*uf{rn48Z!_@
z4Bk6TJAB2CKYqPjiX&mWoW>OPFGd$wqro<oln8GL@_6LPC)kg1!M)Y!|NCn7b*0sG
zEN=&c2xMM<>a($ne7EUK;#3V<N-jQ7j($tREa0F&-HzYCQtR#fTCZMRN*ZSm;T7a+
zuxa$}zDL8R9wGYkHb$+gJoiM@z+u{u7a_VUBwtd)bPzHxH}C`W=^2PsBr`s7taBMG
zm#Ss=-o`)W8%%x%>YkXaew%Kh^3OrMht<?zOY6P}#rBhn_hrWY$_P`{#CBR9w?+E6
zt7r#NN-tjxFY{9q75P<|L<ZJBHwn4FhG(&i>jYN?XEoY`tRPQsAkH-DSL^QqyN0>^
zmC>{#F14jz4GeW{pJoRpLFa_*GI{?T93^rX7SPQgT@LbLqpNA}<@2wH;q493)G=1Y
z#-sCiRNX~qf3KgiFzB3I>4Z%AfS(3$`-aMIBU+6?gbgDb!)L~A)je+;fR0jWLL-Fu
z4)<UE%?IC0Du41FrE~F_qc8nOq>P{c7{B4Hp91&%??2$v9iRSFnuckHUm}or9seH6
z>%NbT+5*@L5(I9<vs%8>j@06@(!<!eaZcF<_le1MVaYMg=gRy*f2#IaBH-mJIpy+L
z=Gsbhd6=3>{ZI?U0=pKn8uwIg&L{JV14+8s2hnvbRrU|hZCd}IJu7*;;ECgO%8_*W
Kmw_-CKmY()leWbG

diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..b2dfe3d1ba5cf3ee31b3ecc1ced89044a1f3b7a9
GIT binary patch
literal 2898
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

diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher.webp b/app/src/main/res/mipmap-mdpi/ic_launcher.webp
new file mode 100644
index 0000000000000000000000000000000000000000..4f0f1d64e58ba64d180ce43ee13bf9a17835fbca
GIT binary patch
literal 982
zc$@*&11bDcNk&G_0{{S5MM6+kP&il$0000G0000l001ul06|PpNU8t;00Dqo+t#w^
z^1csucXz7-Qrhzl9HuH<!ckn_w-(t15itRHmqN0O$B3XH(E|jyV^QXq8=yM`Q**vy
zpEpgQd+no=J<Tlv&+_>B%l>&>1tG2^vb*E&k^T3$FG1eQZ51g$uv4V+kI`0<^1Z@N
zk?Jjh$olyC%l>)Xq;7!>{iBj&BjJ`P&$fsCfpve_epJOBkTF?nu-B7D!hO=2ZR}<p
z;bEy|mw1;}P&gp|0ssKe4*;D3Dlh;r06r}ehC-pC4mGy`3;|+W04+#B4r_x~@mHHy
z)H}bD|I2-n_L$pW;*I)~?=#N<)`92&<$3IR`#<SH6@I&FRQa6xBmQ5wPwJ2PAI(ne
z$L2Yb@JHxb`+bLk*AjR$^`b?pr|?!6=+AboIQ2D-p)UI7x(J0|5(5~ur$_+)`>C%4
zc_9eOXvPbC4kzU8YowIA8cW~Uv|eB&yYwAObSwL2vY~UYI7NXPvf3b+c^?wcs~_t{
ze_m66-0)^{JdOMKPwjpQ@Sna!*?$wTZ~su*tNv7o!gXT!GRgivP}ec?5>l1!7<(rT
zds|8x(qGc673zrvYIz;J23FG{9nHMnAuP}NpAED^laz3mAN1sy+NXK)!6v1FxQ;lh
zOBLA>$~P3r4b*NcqR;y6pwyhZ<hjKiZs6mOSFB&+cIl`GV$93-<ciUjF#*1^<p~gh
ziQ_{)r0dA7$It&Fe=obxu8n!+elxmgqxPbUL!FxW0;AOfqz@8JOz9Qbm)m-9!^7D)
z480@BoIIb<oT``+rVla8L)8fXO&6}3P9n4v$`6WG<DUNWuKb9J9rUsAn7d-_YWT^U
z{NXl@OAPIJ!>3_PiDb|%n1gGjl3ZU}ujInlP{eks-#oA6>rh&g+!f`hv#_%JrgYPu
z(U^&XLW^Q<WhKYr9rXr6*~Tmpuq6NjnD6;;NNBGIg-1ZvfACQ4{ocrwM0)?`oL2ts
zCXY5KT@`(ir63J0?%+_(-dDgf<6R$u{lCdy6Zi5d+Bf;1OXyD;xe3#Gug*&T|0o41
zD8;$|JvUv&@vsLIH&C5+S{!k&{~Z54^y@9r>X7F9Z*SRPpQl{B%x)_AMp^}_v~?j7
zapvHMKxSf*Mtyx8I}-<*UGn3)oHd(nn=)BZ`d$lDBwq_GL($_TPaS{UeevT(AJ`p0
z9%+hQb6z)U9qjbuXjg|dExCLjpS8$VKQ55VsIC%@{N5t{NsW)=hNGI`J=x97_kbz@
E0Of=7!T<mO

diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..62b611da081676d42f6c3f78a2c91e7bcedddedb
GIT binary patch
literal 1772
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
O>FJ$wK}0tWNB{uH;AM~i

diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher.webp b/app/src/main/res/mipmap-xhdpi/ic_launcher.webp
new file mode 100644
index 0000000000000000000000000000000000000000..948a3070fe34c611c42c0d3ad3013a0dce358be0
GIT binary patch
literal 1900
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

diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..1b9a6956b3acdc11f40ce2bb3f6efbd845cc243f
GIT binary patch
literal 3918
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

diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp b/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp
new file mode 100644
index 0000000000000000000000000000000000000000..28d4b77f9f036a47549d47db79c16788749dca10
GIT binary patch
literal 2884
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

diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..9287f5083623b375139afb391af71cc533a7dd37
GIT binary patch
literal 5914
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

diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp b/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp
new file mode 100644
index 0000000000000000000000000000000000000000..aa7d6427e6fa1074b79ccd52ef67ac15c5637e85
GIT binary patch
literal 3844
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
G0001O&w8c+

diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp
new file mode 100644
index 0000000000000000000000000000000000000000..9126ae37cbc3587421d6889eadd1d91fbf1994d4
GIT binary patch
literal 7778
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

diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
new file mode 100644
index 0000000000000000000000000000000000000000..8bdaf60c75ab801e22807dde59e12a8735a34077
GIT binary patch
literal 45457
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
WlaqvngZfjL1PbFu@?FLszy1fzX;9Pv

